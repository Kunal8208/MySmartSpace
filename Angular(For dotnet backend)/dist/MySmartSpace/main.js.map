{"version":3,"sources":["./src/app/customer/cproductdetails/cproductdetails.component.ts","./src/app/customer/cproductdetails/cproductdetails.component.html","./src/app/serviceprovider/newrequests/newrequests.component.ts","./src/app/serviceprovider/newrequests/newrequests.component.html","./src/app/customer/cproductlist/cproductlist.component.ts","./src/app/customer/cproductlist/cproductlist.component.html","./src/app/product.model.ts","./src/app/standard/customermenubar/customermenubar.component.ts","./src/app/standard/customermenubar/customermenubar.component.html","./src/environments/environment.ts","./src/app/admin/auserslist/auserslist.component.ts","./src/app/admin/auserslist/auserslist.component.html","./src/app/membership/membership.service.ts","./src/app/customer/payment/payment.component.ts","./src/app/customer/payment/payment.component.html","./src/app/productstateservice.service.ts","./src/app/User.model.ts","./src/app/membership/logout/logout.component.ts","./src/app/membership/logout/logout.component.html","./src/app/admin/aserviceproviderlist/aserviceproviderlist.component.ts","./src/app/admin/aserviceproviderlist/aserviceproviderlist.component.html","./src/app/standard/contactus/contactus.component.ts","./src/app/standard/contactus/contactus.component.html","./src/app/serviceprovider/srequestdetails/srequestdetails.component.ts","./src/app/serviceprovider/srequestdetails/srequestdetails.component.html","./src/app/customer/cviewquotation/cviewquotation.component.ts","./src/app/customer/cviewquotation/cviewquotation.component.html","./src/app/spa/spa.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/standard/aboutus/aboutus.component.ts","./src/app/standard/aboutus/aboutus.component.html","./src/app/membership/login/login.component.ts","./src/app/membership/login/login.component.html","./src/app/customer/cnewrequest/cnewrequest.component.ts","./src/app/customer/cnewrequest/cnewrequest.component.html","./src/app/Payment.model.ts","./src/app/customer/callrequests/callrequests.component.ts","./src/app/customer/callrequests/callrequests.component.html","./src/app/serviceprovider/serviceprovider.module.ts","./src/app/standard/serviceprovidermenubar/serviceprovidermenubar.component.ts","./src/app/standard/serviceprovidermenubar/serviceprovidermenubar.component.html","./src/app/membership/register/register.component.ts","./src/app/membership/register/register.component.html","./src/app/app.module.ts","./src/app/productservice.service.ts","./src/app/serviceprovider/screatequotation/screatequotation.component.ts","./src/app/serviceprovider/screatequotation/screatequotation.component.html","./src/app/customer/customer.module.ts","./src/app/customer/corders/corders.component.ts","./src/app/customer/corders/corders.component.html","./src/app/standard/products/products.component.ts","./src/app/standard/products/products.component.html","./src/app/customer/cquotationdetails/cquotationdetails.component.ts","./src/app/newRequest.model.ts","./src/app/Order.model.ts","./src/app/admin/admin.module.ts","./src/app/spa/container/container.component.ts","./src/app/spa/container/container.component.html","./src/app/serviceprovider/squotationssent/squotationssent.component.ts","./src/app/serviceprovider/squotationssent/squotationssent.component.html","./src/app/serviceprovider/servicehome/servicehome.component.ts","./src/app/serviceprovider/servicehome/servicehome.component.html","./src/app/admin/adminhome/adminhome.component.ts","./src/app/admin/adminhome/adminhome.component.html","./src/app/standard/adminmenubar/adminmenubar.component.ts","./src/app/standard/adminmenubar/adminmenubar.component.html","./src/app/standard/home/home.component.ts","./src/app/standard/home/home.component.html","./src/app/Quotation.model.ts","./src/app/admin/addserviceprovider/addserviceprovider.component.ts","./src/app/admin/addserviceprovider/addserviceprovider.component.html","./src/app/serviceprovider/servedproducts/servedproducts.component.ts","./src/app/serviceprovider/servedproducts/servedproducts.component.html","./src/app/standard/standard.module.ts","./src/app/app-routing.module.ts","./src/app/membership/membership.module.ts","./src/app/serviceprovider/sorders/sorders.component.ts","./src/app/serviceprovider/sorders/sorders.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NewRequest } from 'src/app/newRequest.model';\nimport { Order } from 'src/app/Order.model';\nimport { Product } from 'src/app/product.model';\nimport { ProductserviceService } from 'src/app/productservice.service';\nimport { ProductstateserviceService } from 'src/app/productstateservice.service';\nimport { User } from 'src/app/User.model';\n\n@Component({\n  selector: 'app-cproductdetails',\n  templateUrl: './cproductdetails.component.html',\n  styleUrls: ['./cproductdetails.component.css']\n})\nexport class CproductdetailsComponent implements OnInit {\n\n  @Input(\"product\")product:Product=null;\n  newRequestObj:NewRequest;\n  customer:User=JSON.parse(sessionStorage[\"user_dtls\"]);\n  newOrder:Order;\n  newProduct:Product;\n\n\n  constructor(private prodService: ProductserviceService, private prodstate:ProductstateserviceService, private route :ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {}\n\n  goToNewRequest(){\n    this.prodstate.productState=this.product;\n    this.prodstate.newRequestObj=new NewRequest(null, this.customer, null, this.product.Category, this.product.Dimension, this.product.Weight, this.product.Controller, \n      this.product.Sensor, this.product.BuildType, this.product.MotorType, this.product.WiringType, this.product.PowerSupplyUnit, \n      this.product.BluetoothEnabled, this.product.InternetControlled, this.product.CameraEquipped, this.product.PhysicalRemote, null, true);\n    this.router.navigate(['./customize']);\n  }\n\n  goToNewOrder(){\n    this.newProduct=this.product;\n    this.newProduct.ProductId=null;\n    this.prodService.addProduct(this.newProduct).subscribe(\n      data=>{\n        alert(\"product added....\");\n        this.newProduct=data;\n        this.newOrder=new Order(null, this.customer, this.newProduct, this.newProduct.ServiceProviderId, \n          1, this.newProduct.FinalPrice, 0, false, new Date(), null);\n\n        this.prodService.placeOrder(this.newOrder).subscribe(\n          data=>{\n            alert(\"Order Placed successfully...\");\n            this.router.navigate([\"customer\"]);\n          }, err=>{\n            console.log(err);\n            alert(\"Order NOT placed...!!!\");\n          }\n        )\n      }, err=>{\n        console.log(err);\n        alert(\"Product NOT added...!!!\");\n      }\n    )\n  }\n}\n\n","\n<div class=\"table-title\">\n    <h3>Product Details</h3>\n    </div>\n    <table class=\"table-fill\">\n    <thead>\n    <tr>\n        <th class=\"text-left\">Component</th>\n        <th class=\"text-left\">Value</th>\n    </tr>\n    </thead>\n    <tbody class=\"table-hover\">\n    <tr>\n        <td class=\"text-left\">Service Provider</td>\n        <td class=\"text-left\">{{product.ServiceProviderId}}</td>\n    </tr>\n\n    <tr>\n        <td class=\"text-left\">description</td>\n        <td class=\"text-left\">{{product.Description}}</td>\n    </tr>\n\n    <tr>\n        <td class=\"text-left\">Category</td>\n        <td class=\"text-left\">{{product.Category}}</td>\n    </tr>\n    <tr>\n        <td class=\"text-left\">Dimension</td>\n        <td class=\"text-left\">{{product.Dimension}}</td>\n    </tr>\n    <tr>\n        <td class=\"text-left\">Weight</td>\n        <td class=\"text-left\">{{product.Weight}}</td>\n    </tr>\n    <tr>\n        <td class=\"text-left\">Controller</td>\n        <td class=\"text-left\">{{product.Controller}}</td>\n    </tr>\n    <tr>\n        <td class=\"text-left\">Sensor</td>\n        <td class=\"text-left\">{{product.Sensor}}</td>\n    </tr>\n\n    <tr>\n        <td class=\"text-left\">bluetoothEnabled</td>\n        <td class=\"text-left\">{{product.BluetoothEnabled}}</td>\n    </tr>\n\n    <tr>\n        <td class=\"text-left\">internetControlled</td>\n        <td class=\"text-left\">{{product.InternetControlled}}</td>\n    </tr>\n\n    <tr>\n        <td class=\"text-left\">physicalRemote</td>\n        <td class=\"text-left\">{{product.PhysicalRemote}}</td>\n    </tr>\n\n    <tr>\n        <td class=\"text-left\">cameraEquipped</td>\n        <td class=\"text-left\">{{product.CameraEquipped}}</td>\n    </tr>\n\n    <tr>\n        <td class=\"text-left\">motorType</td>\n        <td class=\"text-left\">{{product.MotorType}}</td>\n    </tr>\n\n    <tr>\n        <td class=\"text-left\">powerSupplyUnit</td>\n        <td class=\"text-left\">{{product.PowerSupplyUnit}}</td>\n    </tr>\n\n    <tr>\n        <td class=\"text-left\">wiringType</td>\n        <td class=\"text-left\">{{product.WiringType}}</td>\n    </tr>\n\n    <tr>\n        <td class=\"text-left\">buildType</td>\n        <td class=\"text-left\">{{product.BuildType}}</td>\n    </tr>\n\n    <tr>\n        <td class=\"text-left\">rating</td>\n        <td class=\"text-left\">{{product.Rating}}</td>\n    </tr>\n\n    <tr>\n        <td class=\"text-left\">finalPrice</td>\n        <td class=\"text-left\">{{product.FinalPrice}}</td>\n    </tr>\n    \n    </tbody>\n    </table>\n\n    <button (click)=\"goToNewRequest()\">Customize</button>\n    <button (click)=\"goToNewOrder()\">Order This Product</button>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { NewRequest } from 'src/app/newRequest.model';\nimport { ProductserviceService } from 'src/app/productservice.service';\nimport { User } from 'src/app/User.model';\n\n@Component({\n  selector: 'app-newrequests',\n  templateUrl: './newrequests.component.html',\n  styleUrls: ['./newrequests.component.css']\n})\nexport class NewrequestsComponent implements OnInit {\n\n  serviceProvider:User=JSON.parse(sessionStorage[\"user_dtls\"]);\n  newRequestsWithoutQuotationSent:[];\n  selectedRequest:NewRequest;\n  showRequestDetails:boolean=false;\n\n  constructor(private prodService:ProductserviceService, private route :ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    this.prodService.getNewRequestsWithoutQuotationSent(this.serviceProvider.UserId).subscribe(\n      data=>this.newRequestsWithoutQuotationSent=data,\n      err=>console.log(err)\n    )\n  }\n\n\n  viewRequestDetails(newRequest:NewRequest){\n    this.selectedRequest=newRequest;\n    this.showRequestDetails=true;\n  }\n\n  cancelDetailView(flag:boolean){\n    this.showRequestDetails=false;\n  }\n\n}\n","<div class=\"page-content page-container\" id=\"page-content\">\r\n    <div class=\"padding\">\r\n        <div class=\"row container d-flex justify-content-center\">\r\n            <div class=\"col-lg-8 grid-margin stretch-card\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title\">Showing All New Requests</h4>\r\n                        <p class=\"card-description\"></p>\r\n                        <div class=\"table-responsive\">\r\n                            <table class=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Requested By</th>\r\n                                        <th>Customer Email</th>\r\n                                        <th>Requested On</th>\r\n                                        <th>Product Category</th>\r\n                                        <th>Status</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                \r\n                                    <tr *ngFor=\"let req of newRequestsWithoutQuotationSent\">\r\n                                        <td>{{req.UserId.FirstName}}</td>\r\n                                        <td>{{req.UserId.Email}}</td>\r\n                                        <td>{{req.RequestDate}}</td>\r\n                                        <td>{{req.Category}}</td>\r\n                                        <td><label class=\"badge badge-warning\">New</label></td>\r\n                                       \r\n                                        <td><button class=\"btn btn-primary\" (click)=\"viewRequestDetails(req)\">View Details</button></td>\r\n                                    </tr>\r\n                                </tbody>\r\n    \r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<app-srequestdetails *ngIf=\"showRequestDetails\" [request]=\"selectedRequest\" (cancelButton)=\"cancelDetailView($event)\"></app-srequestdetails>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Product } from 'src/app/product.model';\nimport { ProductserviceService } from 'src/app/productservice.service';\nimport { User } from 'src/app/User.model';\n\n@Component({\n  selector: 'app-cproductlist',\n  templateUrl: './cproductlist.component.html',\n  styleUrls: ['./cproductlist.component.scss']\n})\nexport class CproductlistComponent implements OnInit {\n\n  products:[];\n  selectedProduct:Product;\n  customer:User=JSON.parse(sessionStorage[\"user_dtls\"]);\n  isProductViewSelected:boolean=false;\n  \n  \n\n  constructor(private prodService:ProductserviceService, private route :ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    this.prodService.getProductsByCategory('WINDOW').subscribe(\n      data=>{\n        this.products=data;\n      },\n      err=>{\n        console.log(err);\n      }\n    )\n  }\n\n\n  getProductsByCategory(category:string){\n    this.prodService.getProductsByCategory(category).subscribe(data=>this.products=data, err=>console.log(err));\n  }\n\n  viewProductClicked(product:Product){\n    this.isProductViewSelected=true;\n    this.selectedProduct=product;\n  }\n\n  showAllRequests(){\n    this.router.navigate([\"./allrequests\"], {relativeTo:this.route});\n  }\n\n  showAllOrders(){\n    this.router.navigate([\"./orders\"], {relativeTo:this.route});\n  }\n\n}\n","\n<body>\n<div>\n    Logged In as: {{customer.FirstName}}\n</div>\n\n<!--\n<div style=\"width: 100%; display: table;\">\n    <div style=\"display: table-row\">\n        <div style=\"width: 50%; display: table-cell;\"> \n            <table width=\"100%\">\n                <tr><th>Select Category</th>\n                    <th><select name=\"category\" (change)=\"getProductsByCategory($event)\">\n                        <option value=\"WINDOW\">Window</option>\n                        <option value=\"DOOR\">Door</option>\n                    </select>\n                    </th></tr>\n                    <tr *ngFor=\"let p of products\">\n                        <td>\n                            <div>\n                                <div><strong>Product: </strong>{{p.productId}}</div>\n                                <div><strong>Service Provider: </strong> {{p.serviceProviderId.userId}}</div>\n                                <div><strong>Category: </strong> {{p.category}}</div>\n                            </div>\n                        </td>\n                        <td>\n                            <button (click)=\"getDetails(p)\">View</button>\n                        </td>\n                    </tr>\n            </table>\n        </div>\n        <div style=\"width: 50%; display: table-cell;\" *ngIf=\"isProductViewSelected\"> Right </div>\n    </div>\n</div>\n-->\n<br><br><br><br>\n<!--\n<div style=\"margin-inline: 20%; float: left;\"><button type=\"button\" class=\"btn btn-primary\" (click)=\"showAllRequests()\">Show All Requests</button></div>\n\n<div style=\"margin-inline: 20%; float: inline-start;\"><button type=\"button\" class=\"btn btn-primary\" (click)=\"showAllOrders()\">Show All Orders</button></div>\n\n<br><br>\n\n-->\n\n<div class=\"btn-group dropright\">\n        <button type=\"button\" class=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n          Select Category\n        </button>\n        <div class=\"dropdown-menu\">\n            <a class=\"dropdown-item\" (click)=\"getProductsByCategory('WINDOW')\">Window</a>\n            <a class=\"dropdown-item\" (click)=\"getProductsByCategory('DOOR')\">Door</a>\n        </div>\n</div>\n\n <br><br>\n\n<div class=\"container\" style=\"display: flex; height: 100px; width: 2000%;\">\n    <div style=\"width: 50%;\">\n        \n        <div class=\"container\">\n            <ul class=\"responsive-table\">\n              <li class=\"table-header\">\n                <div class=\"col col-1\">Product Id</div>\n                <div class=\"col col-2\">Service Provider Email</div>\n                <div class=\"col col-3\">Price</div>\n                <div class=\"col col-4\">Rating</div>\n                <div class=\"col col-5\"></div>\n                \n              </li>\n              <li class=\"table-row\" *ngFor=\"let p of products\">\n                <div class=\"col col-1\" data-label=\"Product Id\">{{p.ProductId}}</div>\n                <div class=\"col col-2\" data-label=\"Service Provider Email\">{{p.ServiceProviderId.Email}}</div>\n                <div class=\"col col-3\" data-label=\"Price\">{{p.FinalPrice}}</div>\n                <div class=\"col col-4\" data-label=\"Rating\">{{p.Rating}}</div>\n                <div class=\"col col-5\"><button  class=\"btn-1\" (click)=\"viewProductClicked(p)\">View</button></div>\n              </li>\n              \n            </ul>\n          </div>\n    </div>\n    <div style=\"flex-grow: 1;\">\n        \n        <app-cproductdetails [product]=\"selectedProduct\" *ngIf=\"isProductViewSelected\"></app-cproductdetails>\n    </div>\n</div>\n\n</body>","import { User } from \"./User.model\";\r\n\r\nexport class Product{\r\n    constructor(\r\n        public ProductId:number,\r\n        public ServiceProviderId:User,\r\n        public Category:string,\r\n        public Dimension:string,\r\n        public Weight:number,\r\n        public Controller:string,\r\n        public Sensor:string,\r\n        public BluetoothEnabled:string,\r\n        public InternetControlled:boolean,\r\n        public PhysicalRemote:string,\r\n        public CameraEquipped:string,\r\n        public MotorType:string,\r\n        public PowerSupplyUnit:string,\r\n        public WiringType:string,\r\n        public BuildType:string,\r\n        public Rating:number,\r\n        public ImageUrl:string,\r\n        public FinalPrice:number,\r\n        public Description:string,\r\n        public QuantitySold:number\r\n        )\r\n{\r\n}\r\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-customermenubar',\n  templateUrl: './customermenubar.component.html',\n  styleUrls: ['./customermenubar.component.css']\n})\nexport class CustomermenubarComponent implements OnInit {\n\n  constructor(private route :ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  homeClicked(){\n    this.router.navigate([\"customer\"]);\n  }\n\n  allRequestsClicked(){\n    this.router.navigate([\"customer/allrequests\"]);\n  }\n\n  allOrdersClicked(){\n    this.router.navigate([\"customer/orders\"]);\n  }\n\n  goToLogout(){\n    this.router.navigate([\"logout\"]);\n  }\n\n}\n","\n<script>\n  \n  (function($) { \"use strict\";\n  \n  $(function() {\n    var header = $(\".start-style\");\n    $(window).scroll(function() {    \n      var scroll = $(window).scrollTop();\n    \n      if (scroll >= 10) {\n        header.removeClass('start-style').addClass(\"scroll-on\");\n      } else {\n        header.removeClass(\"scroll-on\").addClass('start-style');\n      }\n    });\n  });\t\t\n    \n  //Animation\n  \n  $(document).ready(function() {\n    $('body.hero-anime').removeClass('hero-anime');\n  });\n  \n  //Menu On Hover\n    \n  $('body').on('mouseenter mouseleave','.nav-item',function(e){\n      if ($(window).width() > 750) {\n        var _d=$(e.target).closest('.nav-item');_d.addClass('show');\n        setTimeout(function(){\n        _d[_d.is(':hover')?'addClass':'removeClass']('show');\n        },1);\n      }\n  });\t\n  \n  //Switch light/dark\n  \n  $(\"#switch\").on('click', function () {\n    if ($(\"body\").hasClass(\"dark\")) {\n      $(\"body\").removeClass(\"dark\");\n      $(\"#switch\").removeClass(\"switched\");\n    }\n    else {\n      $(\"body\").addClass(\"dark\");\n      $(\"#switch\").addClass(\"switched\");\n    }\n  });  \n  \n  })(jQuery); \n  </script>\n\n<body class=\"hero-anime\">\t\n\n\t<div class=\"navigation-wrap bg-light start-header start-style\">\n\t\t<div class=\"container\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-12\">\n\t\t\t\t\t<nav class=\"navbar navbar-expand-md navbar-light\">\n\t\t\t\t\t\n\t\t\t\t\t\t<span style=\"color: orangered; font-size: 40px; font-style: italic; font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\">My Smart Space</span>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n\t\t\t\t\t\t\t<span class=\"navbar-toggler-icon\"></span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n\t\t\t\t\t\t\t<ul class=\"navbar-nav ml-auto py-4 py-md-0\">\n\n                <!--\n\t\t\t\t\t\t\t\t<li class=\"nav-item pl-4 pl-md-0 ml-0 ml-md-4 active\">\n\t\t\t\t\t\t\t\t\t<a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Home</a>\n\t\t\t\t\t\t\t\t\t<div class=\"dropdown-menu\">\n\t\t\t\t\t\t\t\t\t\t<a class=\"dropdown-item\" href=\"#\">Action</a>\n\t\t\t\t\t\t\t\t\t\t<a class=\"dropdown-item\" href=\"#\">Another action</a>\n\t\t\t\t\t\t\t\t\t\t<a class=\"dropdown-item\" href=\"#\">Something else here</a>\n\t\t\t\t\t\t\t\t\t\t<a class=\"dropdown-item\" href=\"#\">Another action</a>\n\t\t\t\t\t\t\t\t\t</div>\n                </li>\n                -->\n                \n\t\t\t\t\t\t\t\t<li class=\"nav-item pl-4 pl-md-0 ml-0 ml-md-4\">\n\t\t\t\t\t\t\t\t\t<a class=\"nav-link\" (click)=\"homeClicked()\">Home</a>\n                </li>\n                \n                <li class=\"nav-item pl-4 pl-md-0 ml-0 ml-md-4\">\n\t\t\t\t\t\t\t\t\t<a class=\"nav-link\" (click)=\"allRequestsClicked()\">All Requests</a>\n                </li>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<li class=\"nav-item pl-4 pl-md-0 ml-0 ml-md-4\">\n\t\t\t\t\t\t\t\t\t<a class=\"nav-link\" (click)=\"allOrdersClicked()\">All Orders</a>\n                </li>\n                \n                <li class=\"nav-item pl-4 pl-md-0 ml-0 ml-md-4\">\n\t\t\t\t\t\t\t\t\t<a class=\"nav-link\" (click)=\"goToLogout()\">Logout</a>\n                </li>\n\n\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t</nav>\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\n</body>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MembershipService } from 'src/app/membership/membership.service';\nimport { User } from 'src/app/User.model';\n\n@Component({\n  selector: 'app-auserslist',\n  templateUrl: './auserslist.component.html',\n  styleUrls: ['./auserslist.component.css']\n})\nexport class AuserslistComponent implements OnInit {\n\n  admin:User=JSON.parse(sessionStorage[\"user_dtls\"]);\n  usersList:[];\n\n  constructor(private ms:MembershipService, private router:Router) { }\n\n  ngOnInit(): void {\n    this.ms.getUsersByRole(\"CUSTOMER\").subscribe(\n      data=>{\n        this.usersList=data;\n      }, err=>{\n        console.log(err);\n      }\n    );\n  }\n\n  removeUser(customer:User){\n    this.ms.removeUser(customer).subscribe(\n      data=>{\n        console.log(data);\n        alert(\"Customer Removed...\");\n        this.router.navigate([\"admin\"]);\n      },\n      err=>{console.log(err);\n        alert(\"Customer NOT removed...!!!\");\n      }\n    )\n  }\n\n}\n","\n\n<div class=\"page-content page-container\" id=\"page-content\" style=\"margin-top: 10%;\">\n    <div class=\"padding\">\n        <div class=\"row container d-flex justify-content-center\">\n            <div class=\"col-lg-8 grid-margin stretch-card\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <h4 class=\"card-title\">Registered Users</h4>\n                        <p class=\"card-description\"> Hi {{admin.FirstName}}, showing registered users ! </p>\n                        <div class=\"table-responsive\">\n                            <table class=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th>User Id</th>\n                                        <th>Name</th>\n                                        <th>Email</th>\n                                        <th>Contact Number</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr *ngFor=\"let customer of usersList\">\n                                        <td>{{customer.UserId}}</td>\n                                        <td>{{customer.FirstName}} {{customer.LastName}}</td>\n                                        <td>{{customer.Email}}</td>\n                                        <td>{{customer.ContactNumber}}</td>\n                                        <td><button class=\"btn btn-danger\" (click)=\"removeUser(customer)\">Remove User</button></td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\n\nimport { User } from '../User.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MembershipService {\n\n  loginStatus:boolean=false;\n  user:User;\n\n // baseUrl:string=\"http://localhost:8282/users/\";\n\n  baseUrlLogin=\"http://localhost:64734/login\";\n  baseUrlUserRole=\"http://localhost:64734/userrole/\";\n  baseUrlUsers=\"http://localhost:64734/users/\"\n\n  constructor(private http:HttpClient) { }\n\n  validateUser(mail:String , pass:String):Observable<any>{\n    let body = {\n      email: mail, \n      password: pass\n    };\n    \n    return this.http.post(this.baseUrlLogin, body);\n  }\n\n  getUsersByRole(role:String):Observable<any>{\n    let roleId:number;\n    switch(role){\n      case \"ADMIN\": roleId=0;\n      break;\n      case \"CUSTOMER\": roleId=1;\n      break;\n      case \"SERVICE\": roleId=2;\n      break;\n    }\n    return this.http.get(this.baseUrlUserRole + roleId);\n  }\n\n  removeUser(customer:User):Observable<any>{\n    return this.http.delete(this.baseUrlUsers + customer.UserId);\n  }\n\n  registerUser(user:User):Observable<any>{\n    return this.http.post(this.baseUrlUsers, user);\n  }\n\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Order } from 'src/app/Order.model';\nimport { Payment } from 'src/app/Payment.model';\nimport { ProductserviceService } from 'src/app/productservice.service';\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.css']\n})\nexport class PaymentComponent implements OnInit {\n\n  orderId:number;\n  order:Order;\n  newPayment:Payment;\n\n  constructor(private route:ActivatedRoute, private prodService:ProductserviceService, private router:Router) { }\n\n  ngOnInit(): void {\n\n    this.route.paramMap.subscribe(params=>{\n      this.orderId=Number(params.get(\"id\"));\n      this.prodService.getOrderById(this.orderId).subscribe(data=>{\n        this.order=data; \n        this.newPayment=new Payment(null, this.order, new Date(), this.order.TotalAmount);\n      }, err=>console.log(err));\n    });\n\n  }\n\n  makePayment(){\n    this.prodService.insertPayment(this.newPayment).subscribe(\n      data=>{\n        alert(\"Payment successful...\");\n        this.router.navigate([\"customer/orders\"]);\n      }, err=>{\n        console.log(err);\n        alert(\"Payment failed...!!\");\n      }\n    )\n  }\n\n}\n","<div class='container'>\n    <div class=\"card mx-auto col-md-5 col-8 mt-3 p-0\"> <img class='mx-auto pic' src=\"https://i.imgur.com/kXUgBQZ.jpg\" />\n        <div class=\"card-title d-flex px-4\">\n            <p class=\"item text-muted\">Order Id: {{order.OrderId}} </p>\n            <p>{{order.TotalAmount | currency:'INR':true}}</p>\n        </div>\n        <div class=\"card-body\">\n            <p class=\"text-muted\">Your payment details</p>\n            <div class=\"numbr mb-3\"> <i class=\" col-1 fas fa-credit-card text-muted p-0\"></i> <input class=\"col-10 p-0\" type=\"text\" placeholder=\"Card Number\"> </div>\n            <div class=\"line2 col-lg-12 col-12 mb-4\"> <i class=\"col-1 far fa-calendar-minus text-muted p-0\"></i> <input class=\"cal col-5 p-0\" type=\"text\" placeholder=\"MM/YY\"> <i class=\"col-1 fas fa-lock text-muted\"></i> <input class=\"cvc col-5 p-0\" type=\"text\" placeholder=\"CVC\"> </div>\n        </div>\n        <div class=\"footer text-center p-0\">\n            <div class=\"col-lg-12 col-12 p-0\">\n                <p class=\"order\" (click)=\"makePayment()\">Order Now</p>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { NewRequest } from './newRequest.model';\nimport { Product } from './product.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductstateserviceService {\n\n  public productState:Product;\n  newRequestObj:NewRequest;\n\n  constructor() { }\n\n}\n","export class User{\r\n    constructor(\r\n        public UserId:number,\r\n        public FirstName:String,\r\n        public LastName:String,\r\n        public Email:String,\r\n        public Password:String,\r\n        public Role:number,\r\n        public CompanyName:String,\r\n        public ContactNumber:String,\r\n        public Address:String\r\n    ){}\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/User.model';\nimport { MembershipService } from '../membership.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  user:User=JSON.parse(sessionStorage[\"user_dtls\"]);\n\n  constructor(private router: Router, public ms: MembershipService) { }\n\n  ngOnInit(): void {\n    if(this.user){\n      alert(\"Logging out...\");\n      sessionStorage.clear();\n      this.ms.loginStatus=false;\n      this.ms.user=undefined;\n      this.router.navigate([\"login\"]);\n    }\n  }\n\n}\n","<p>logout works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MembershipService } from 'src/app/membership/membership.service';\nimport { User } from 'src/app/User.model';\n\n@Component({\n  selector: 'app-aserviceproviderlist',\n  templateUrl: './aserviceproviderlist.component.html',\n  styleUrls: ['./aserviceproviderlist.component.css']\n})\nexport class AserviceproviderlistComponent implements OnInit {\n\n  admin:User=JSON.parse(sessionStorage[\"user_dtls\"]);\n  serviceProvidersList:[];\n\n  constructor(private ms:MembershipService, private router:Router, private route:ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.ms.getUsersByRole(\"SERVICE\").subscribe(\n      data=>{\n        this.serviceProvidersList=data;\n      }, err=>{\n        console.log(err);\n      }\n    );\n  }\n\n  showAddUser(){\n    this.router.navigate(['./add'], {relativeTo:this.route});\n  }\n\n  removeUser(customer:User){\n    this.ms.removeUser(customer).subscribe(\n      data=>{\n        console.log(data);\n        alert(\"Service Provider Removed...\");\n        this.router.navigate([\"admin/serviceprovider\"]); \n      },\n      err=>{console.log(err);\n        alert(\"Service Provider NOT removed...!!!\");\n      }\n    )\n  }\n\n}\n","\n\n<div class=\"page-content page-container\" id=\"page-content\" style=\"margin-top: 10%;\">\n    <div class=\"padding\">\n        <div class=\"row container d-flex justify-content-center\">\n            <div class=\"col-lg-8 grid-margin stretch-card\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <h4 class=\"card-title\">Registered Service Providers</h4>\n                        <p class=\"card-description\" style=\"float: left;\"> Hi {{admin.FirstName}}, showing registered Service Providers ! </p>\n                        <p style=\"float: right;\"><button class=\"btn btn-success\" (click)=\"showAddUser()\">ADD Service Provider</button></p>\n                        <div class=\"table-responsive\">\n                            <table class=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th>Service Provider Id</th>\n                                        <th>Company</th>\n                                        <th>Email</th>\n                                        <th>Service Provider Name</th>\n                                        <th>Contact Number</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr *ngFor=\"let serviceProvider of serviceProvidersList\">\n                                        <td>{{serviceProvider.UserId}}</td>\n                                        <td>{{serviceProvider.CompanyName}}</td>\n                                        <td>{{serviceProvider.Email}}</td>\n                                        <td>{{serviceProvider.FirstName}} {{serviceProvider.LastName}}</td>\n                                        <td>{{serviceProvider.ContactNumber}}</td>\n                                        <td><button class=\"btn btn-danger\" (click)=\"removeUser(serviceProvider)\">Remover</button></td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contactus',\n  templateUrl: './contactus.component.html',\n  styleUrls: ['./contactus.component.css']\n})\nexport class ContactusComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>contactus works!</p>\n","import { Route } from '@angular/compiler/src/core';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NewRequest } from 'src/app/newRequest.model';\nimport { ProductserviceService } from 'src/app/productservice.service';\n\n@Component({\n  selector: 'app-srequestdetails',\n  templateUrl: './srequestdetails.component.html',\n  styleUrls: ['./srequestdetails.component.css']\n})\nexport class SrequestdetailsComponent implements OnInit {\n\n  @Input(\"request\") request:NewRequest;\n  @Output(\"cancelButton\") cancelButton=new EventEmitter();\n\n  constructor(private prodService:ProductserviceService, private route :ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  cancel(){\n    this.cancelButton.emit(false);\n    this.request=undefined;\n  }\n\n  createQuotation(){\n    alert(\"Create Quotation\");\n    this.router.navigate([\"./quotation/\"+this.request.RequestId],{relativeTo:this.route});\n\n  }\n\n}\n","<table style=\"width: 50%; border-style: solid; margin-left: 20%;\">\n    <tr>\n        <th colspan=\"4\">Requested By: {{request.UserId.Email}} &nbsp;&nbsp; Contact: {{request.UserId.ContactNumber}}</th>\n    </tr>\n\n    <tr>\n        <th>Request Date: </th><td>{{request.RequestDate}}</td>\n        <th>Category: </th><td>{{request.Category}}</td>\n    </tr>\n\n    <tr>\n        <th>Dimension: </th><td>{{request.Dimension}}</td>\n        <th>Weight: </th><td>{{request.Weight}}</td>\n    </tr>\n\n    <tr>\n        <th>Controller: </th><td>{{request.Controller}}</td>\n        <th>Sensor: </th><td>{{request.Sensor}}</td>\n    </tr>\n\n    <tr>\n        <th>buildType: </th><td>{{request.BuildType}}</td>\n        <th>motorType: </th><td>{{request.MotorType}}</td>\n    </tr>\n\n    <tr>\n        <th>buildTwiringTypeype: </th><td>{{request.WiringType}}</td>\n        <th>powerSupplyUnit: </th><td>{{request.PowerSupplyUnit}}</td>\n    </tr>\n\n    <tr>\n        <th>bluetoothEnabled: </th><td>{{request.BluetoothEnabled}}</td>\n        <th>internetControlled: </th><td>{{request.InternetControlled}}</td>\n    </tr>\n\n    <tr>\n        <th>cameraEquipped: </th><td>{{request.CameraEquipped}}</td>\n        <th>physicalRemote: </th><td>{{request.PhysicalRemote}}</td>\n    </tr>\n\n    <tr>\n        <th colspan=\"2\">note: </th><td colspan=\"2\">{{request.Note}}</td>\n    </tr>\n\n    <tr>\n        <th colspan=\"2\"> <button (click)=\"createQuotation()\">Create Quotation</button> </th>\n        <th colspan=\"2\"><button (click)=\"cancel()\">Cancel</button></th>\n    </tr>\n</table>","import { stringify } from '@angular/compiler/src/util';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { NewRequest } from 'src/app/newRequest.model';\nimport { Order } from 'src/app/Order.model';\nimport { Product } from 'src/app/product.model';\nimport { ProductserviceService } from 'src/app/productservice.service';\nimport { Quotation } from 'src/app/Quotation.model';\nimport { User } from 'src/app/User.model';\n\n@Component({\n  selector: 'app-cviewquotation',\n  templateUrl: './cviewquotation.component.html',\n  styleUrls: ['./cviewquotation.component.css']\n})\nexport class CviewquotationComponent implements OnInit {\n\n  customer:User=JSON.parse(sessionStorage[\"user_dtls\"]);\n  @Input(\"quotations\") allQuotations:[];\n  @Input(\"request\")request:NewRequest;\n  @Output(\"selectedQuotation\") selectedQuotation=new EventEmitter();\n  createdProduct:Product;\n  placedOrder:Order;\n\n  constructor(private prodService:ProductserviceService, private route :ActivatedRoute, private router: Router) {}\n\n  ngOnInit(): void {\n  }\n\n\n  getClass(quotation:Quotation):String{\n\n    if(quotation.AcceptanceStatus==0){\n      return \"badge badge-warning\";\n    }\n    else if(quotation.AcceptanceStatus==1){\n      return \"badge badge-success\";\n    }\n    else if(quotation.AcceptanceStatus==2){\n      return \"badge badge-danger\";\n    }\n  }\n\n  getStatus(quotation:Quotation):String{\n    \n    if(quotation.AcceptanceStatus==0){\n      return \"New\";\n    }\n    else if(quotation.AcceptanceStatus==1){\n      return \"Accepted\";\n    }\n    else if(quotation.AcceptanceStatus==2){\n      return \"Rejected\";\n    }\n  }\n\n  viewQuotation(quotation:Quotation){\n    this.selectedQuotation.emit(quotation);\n  }\n\n  acceptQuotation(quotation:Quotation){\n    this.prodService.acceptQuotation(quotation).subscribe(data=>{\n      this.request.IsValid=false;\n      alert(\"Quotation Accepted and others rejected...\");\n\n      this.createdProduct=new Product(0, quotation.ServiceProviderId, this.request.Category, this.request.Dimension, \n        this.request.Weight, this.request.Controller, this.request.Sensor, this.request.BluetoothEnabled, \n        this.request.InternetControlled, this.request.PhysicalRemote, this.request.CameraEquipped, \n        this.request.MotorType, this.request.PowerSupplyUnit, this.request.WiringType, this.request.BuildType, null, null, \n        quotation.FinalPrice, null, 0);\n\n      this.prodService.addProduct(this.createdProduct).subscribe(\n        data=>{\n          \n          alert(\"product submitted....\");\n\n          this.createdProduct=data;\n\n          this.placedOrder=new Order(0, this.customer, this.createdProduct, quotation.ServiceProviderId, \n            1, quotation.FinalPrice, 0, false, new Date(), null);\n  \n          this.prodService.placeOrder(this.placedOrder).subscribe(\n            data=>{\n              console.log(data);\n              alert(\"Order placed successfully....\");\n            }, err=>{\n              console.log(err);\n              alert(\"Order could not be placed....!!!\");\n            }\n          )\n        }, err=>{\n          console.log(err);\n          alert(\"Product NOT added...!!!\");\n        }\n      )\n\n      this.router.navigate([\"customer/allrequests\"]);\n\n      }, \n      err=>{\n        console.log(err);\n        alert(\"Quotation NOT Accepted...!!!\")\n      });\n  }\n\n  rejectQuotation(quotation:Quotation){\n    this.prodService.rejectQuotation(quotation).subscribe(data=>{\n      alert(\"Quotation Rejected...\"); \n      this.router.navigate([\"/customer/allrequests\"]);\n    },\n      err=>{console.log(err);\n      alert(\"Quotation NOT Rejected...!!!\")\n    });\n  }\n\n}\n","<div class=\"page-content page-container\" id=\"page-content\">\n    <div class=\"padding\">\n        <div class=\"row container d-flex justify-content-center\">\n            <div class=\"col-lg-8 grid-margin stretch-card\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <h4 class=\"card-title\">Showing All Quotations for current Request</h4>\n                        <p class=\"card-description\">Requested on: {{request.RequestDate}}</p>\n                        <div class=\"table-responsive\">\n                            <table class=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th>Company</th>\n                                        <th>Service Provider Email</th>\n                                        <th>Final Price</th>\n                                        <th>Response</th>\n                                        <th>Status</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n\n                                    <tr *ngFor=\"let quot of allQuotations\">\n                                        <td>{{quot.ServiceProviderId.CompanyName}}</td>\n                                        <td>{{quot.ServiceProviderId.Email}}</td>\n                                        <td>{{quot.FinalPrice}}</td>\n                                        <td>{{quot.Response}}</td>\n                                        <td><label class=\"{{getClass(quot)}}\">{{getStatus(quot)}}</label></td>\n                                        <td *ngIf=\"request.isValid\"><button (click)=\"acceptQuotation(quot)\">Accept</button> &nbsp;&nbsp;\n                                             <button (click)=\"rejectQuotation(quot)\">Reject</button></td>\n                                    </tr>\n\n                            \n\n\n<!--\n\n\n\n\n\n\n                                    <tr>\n                                        <td>Samso Park</td>\n                                        <td>34424433</td>\n                                        <td>12 May 2017</td>\n                                        <td><label class=\"badge badge-danger\">Pending</label></td>\n                                    </tr>\n                                    <tr>\n                                        <td>Marlo Sanki</td>\n                                        <td>53425532</td>\n                                        <td>15 May 2015</td>\n                                        <td><label class=\"badge badge-warning\">In progress</label></td>\n                                    </tr>\n                                    <tr>\n                                        <td>John ryte</td>\n                                        <td>53275533</td>\n                                        <td>14 May 2017</td>\n                                        <td><label class=\"badge badge-info\">Fixed</label></td>\n                                    </tr>\n                                    <tr>\n                                        <td>Peter mark</td>\n                                        <td>53275534</td>\n                                        <td>16 May 2017</td>\n                                        <td><label class=\"badge badge-success\">Completed</label></td>\n                                    </tr>\n                                    <tr>\n                                        <td>Dave</td>\n                                        <td>53275535</td>\n                                        <td>20 May 2017</td>\n                                        <td><label class=\"badge badge-warning\">In progress</label></td>\n                                    </tr>\n                    \n                -->\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { StandardModule } from '../standard/standard.module';\nimport { MembershipModule } from '../membership/membership.module';\nimport { HomeComponent } from '../standard/home/home.component';\nimport { AboutusComponent } from '../standard/aboutus/aboutus.component';\nimport { ContactusComponent } from '../standard/contactus/contactus.component';\nimport { ContainerComponent } from './container/container.component';\nimport { LoginComponent } from '../membership/login/login.component';\nimport { CproductlistComponent } from '../customer/cproductlist/cproductlist.component';\nimport { CproductdetailsComponent } from '../customer/cproductdetails/cproductdetails.component';\nimport { CustomerModule } from '../customer/customer.module';\nimport { CnewrequestComponent } from '../customer/cnewrequest/cnewrequest.component';\nimport { CallrequestsComponent } from '../customer/callrequests/callrequests.component';\nimport { CordersComponent } from '../customer/corders/corders.component';\nimport { ServiceproviderModule } from '../serviceprovider/serviceprovider.module';\nimport { ServicehomeComponent } from '../serviceprovider/servicehome/servicehome.component';\nimport { NewrequestsComponent } from '../serviceprovider/newrequests/newrequests.component';\nimport { ScreatequotationComponent } from '../serviceprovider/screatequotation/screatequotation.component';\nimport { SordersComponent } from '../serviceprovider/sorders/sorders.component';\nimport { SquotationssentComponent } from '../serviceprovider/squotationssent/squotationssent.component';\nimport { LogoutComponent } from '../membership/logout/logout.component';\nimport { AdminhomeComponent } from '../admin/adminhome/adminhome.component';\nimport { AdminModule } from '../admin/admin.module';\nimport { AuserslistComponent } from '../admin/auserslist/auserslist.component';\nimport { AserviceproviderlistComponent } from '../admin/aserviceproviderlist/aserviceproviderlist.component';\nimport { RegisterComponent } from '../membership/register/register.component';\nimport { PaymentComponent } from '../customer/payment/payment.component';\nimport { AddserviceproviderComponent } from '../admin/addserviceprovider/addserviceprovider.component';\n\n\nconst routes:Routes = [\n  {path:\"\", redirectTo:\"home\", pathMatch:\"full\"},\n  {path:\"home\", component:HomeComponent},\n  {path:\"aboutus\", component:AboutusComponent},\n  {path:\"contactus\", component:ContactusComponent},\n  {path:\"login\", component:LoginComponent},\n  {path:\"register\", component:RegisterComponent},\n  {path:\"admin\", component:AdminhomeComponent},\n  {path:\"customer\", component:CproductlistComponent},\n  {path:\"details/:id\", component:CproductdetailsComponent},\n  {path:\"customize\", component:CnewrequestComponent},\n  {path:\"customer/allrequests\", component:CallrequestsComponent},\n  {path:\"customer/orders\", component:CordersComponent},\n  {path:\"serviceprovider\", component:ServicehomeComponent},\n  {path:\"serviceprovider/newRequests\", component:NewrequestsComponent},\n  {path:\"serviceprovider/newRequests/quotation/:id\", component:ScreatequotationComponent},\n  {path:\"serviceprovider/orders\", component:SordersComponent},\n  {path:\"serviceprovider/quotations\", component:SquotationssentComponent},\n  {path:\"admin/users\", component:AuserslistComponent},\n  {path:\"admin/serviceprovider\", component:AserviceproviderlistComponent},\n  {path:\"logout\", component:LogoutComponent},\n  {path:\"payment/:id\", component:PaymentComponent},\n  {path:\"admin/serviceprovider/add\", component:AddserviceproviderComponent},\n  \n];\n\n\n@NgModule({\n  declarations: [ContainerComponent],\n  imports: [\n    CommonModule, StandardModule, MembershipModule, RouterModule.forRoot(routes, { onSameUrlNavigation: 'reload' }), CustomerModule, ServiceproviderModule, AdminModule\n  ],\n  exports:[ContainerComponent]\n})\nexport class SpaModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'MySmartSpace';\n}\n","\n<app-container> </app-container>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-aboutus',\n  templateUrl: './aboutus.component.html',\n  styleUrls: ['./aboutus.component.css']\n})\nexport class AboutusComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>aboutus works!</p>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { User } from 'src/app/User.model';\nimport { MembershipService } from '../membership.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  email:String;\n  password:String;\n  invalidFlag:boolean=false;\n  user:User;\n  allUsers:any;\n  registerFlag:boolean=false;\n\n\n  constructor(public ms:MembershipService, private route : ActivatedRoute, private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  login(){\n    this.ms.validateUser(this.email, this.password).subscribe(\n      data=>{\n        console.log(\"Data: \"+data.firstName);\n        if(data==null){\n          this.invalidFlag=true;\n        }\n        else{\n          this.user=data;\n          alert(\"USEr: \"+this.user);\n          sessionStorage['login_status'] = 1;\n          sessionStorage.setItem(\"user_dtls\", JSON.stringify(this.user));\n          this.ms.loginStatus=true;\n          this.ms.user=this.user;\n          this.invalidFlag=false;\n\n          alert(\"ROLE: \"+this.user.FirstName);\n\n          if(this.user.Role == 1){\n            this.router.navigate(['/customer']);\n          }\n          else if(this.user.Role == 2){\n            this.router.navigate(['/serviceprovider']);\n          }\n          else if(this.user.Role == 0){\n            this.router.navigate(['/admin']);\n          }\n        }\n      }, \n      err=>{\n        alert(\"ERROR\");\n        console.log(err);\n        this.invalidFlag=true;\n      });\n  }\n\n  goToRegistration(){\n    this.registerFlag=true;\n   // this.router.navigate([\"/register\"]);\n  }\n\n  resetRegisterFlag(event:Event){\n    this.registerFlag=false;\n  }\n\n}\n","<div class=\"container px-4 py-5 mx-auto\" *ngIf=\"!registerFlag\">\n    <div class=\"card card0\">\n        <div class=\"d-flex flex-lg-row flex-column-reverse\">\n            <div class=\"card card1\">\n                <div class=\"row justify-content-center my-auto\">\n                    <div class=\"col-md-8 col-10 my-5\">\n                        <div class=\"row justify-content-center px-3 mb-3\"> <img id=\"logo\" src=\"/assets/Logo/logo2.png\"> </div>\n                        <h3 class=\"mb-5 text-center heading\">My Smart Space</h3>\n                        <h6 class=\"msg-info\">Please login to your account</h6>\n                        <div class=\"form-group\"> <label class=\"form-control-label text-muted\">Email Id</label> <input type=\"text\" id=\"email\" name=\"email\" placeholder=\"Email id\" class=\"form-control\" [(ngModel)]=\"email\"> </div>\n\t\t\t\t\t\t<div class=\"form-group\"> <label class=\"form-control-label text-muted\">Password</label> <input type=\"password\" id=\"psw\" name=\"psw\" placeholder=\"Password\" class=\"form-control\" [(ngModel)]=\"password\"> </div>\n\t\t\t\t\t\t<div *ngIf=\"invalidFlag\" style=\"color: red;\">Invalid Email or Password. Please try again !!</div>\n                        <div class=\"row justify-content-center my-3 px-3\"> <button class=\"btn-block btn-color\" (click)=\"login()\">Login</button> </div>\n                        <div class=\"row justify-content-center my-2\"> <a href=\"#\"><small class=\"text-muted\">Forgot Password?</small></a> </div>\n                    </div>\n                </div>\n                <div class=\"bottom text-center mb-5\">\n                    <p class=\"sm-text mx-auto mb-3\">Don't have an account?<button class=\"btn btn-white ml-2\" (click)=\"goToRegistration()\">Create new</button></p>\n                </div>\n            </div>\n            <div class=\"card card2\">\n                <div class=\"my-auto mx-md-5 px-md-5 right\">\n                    <h3 class=\"text-white\">We are more than just a company</h3> <small class=\"text-white\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</small>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<app-register *ngIf=\"registerFlag\" (flag)=\"resetRegisterFlag($event)\"></app-register>","import { DatePipe } from '@angular/common';\nimport { Route } from '@angular/compiler/src/core';\nimport { error } from '@angular/compiler/src/util';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NewRequest } from 'src/app/newRequest.model';\nimport { Product } from 'src/app/product.model';\nimport { ProductserviceService } from 'src/app/productservice.service';\nimport { ProductstateserviceService } from 'src/app/productstateservice.service';\nimport { User } from 'src/app/User.model';\n\n@Component({\n  selector: 'app-cnewrequest',\n  templateUrl: './cnewrequest.component.html',\n  styleUrls: ['./cnewrequest.component.css']\n})\nexport class CnewrequestComponent implements OnInit {\n\n  productId:number;\n  product:Product;\n  productCategories:[];\n  customer:User=JSON.parse(sessionStorage[\"user_dtls\"]);\n  newRequestObj:NewRequest;\n  \n\n\n  constructor(private datePipe:DatePipe, private prodService: ProductserviceService, private prodState:ProductstateserviceService, private route :ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    this.product=this.prodState.productState;\n    this.prodState.productState=undefined;\n\n    this.prodService.getAllProductCategories().subscribe(data=>this.productCategories=data, err=>console.log(err));\n\n    this.newRequestObj=this.prodState.newRequestObj;\n    this.prodState.newRequestObj=undefined;\n  }\n\n\n  submitNewRequest(){\n    alert(this.newRequestObj.Sensor);\n    this.newRequestObj.RequestId=0;\n    this.newRequestObj.RequestDate=new Date();\n    this.prodService.submitNewRequest(this.newRequestObj).subscribe(data=>\n      {\n        console.log(data);\n        alert(\"Your Request is submitted successfully...\");\n        this.router.navigate([\"/customer\"]);\n      },\n      err=>{\n        console.log(err);\n        alert(\"Some Error occured...\"+err);\n      });\n  }\n\n}\n","<div class=\"container\" style=\"margin-top: 10%;\">\n  <div style=\"font-size: 26; font-style: italic;\"><u>Customize Product:</u></div>\n  <br>\n  <div class=\"row\">\n    <section class=\"col-xs-12\">\n      <!-- class=\"sr-only\" will hide from the screen -->\n\n        <div class=\"form-group\">\n          <label for=\"productCategory\">Category</label>\n          <div class=\"radio\" *ngFor=\"let prodcat of productCategories\">\n            <label>\n              <input name=\"productCategory\" type=\"radio\" [value]=\"prodcat\">\n              {{prodcat}}\n            </label>\n          </div>\n        </div>\n\n          <!--\n          <div class=\"radio\">\n            <label>\n              <input name=\"radGender\" type=\"radio\">\n              Female\n            </label>\n          </div>\n          <div class=\"radio disabled\">\n            <label>\n              <input name=\"radGender\" type=\"radio\" disabled >\n              Alien\n            </label>\n          </div>\n        -->\n        \n\n\n\n\n\n        \n        <div class=\"form-group\">\n          <label for=\"dimension\">Dimension</label>\n          <input class=\"form-control\" type=\"text\" name=\"dimension\" placeholder=\"dimension\" [(ngModel)]=\"newRequestObj.Dimension\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"weight\">Weight</label>\n          <input type=\"number\" name=\"weight\" placeholder=\"weight\" class=\"form-control\" [(ngModel)]=\"newRequestObj.Weight\">\n        </div>\n        \n        \n        <div class=\"form-group\">\n          <label for=\"controller\">Controller</label>\n          <select name=\"controller\" class=\"form-control\" [(ngModel)]=\"newRequestObj.Controller\">\n            <option value=\"Arduino\">Arduino</option>\n            <option value=\"Raspberry\">Raspberry Pi</option>\n            <option value=\"Atmega\">Atmega</option>\n          </select>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"sensor\">Sensor</label>\n          <select name=\"sensor\" class=\"form-control\" [(ngModel)]=\"newRequestObj.Sensor\">\n            <option value=\"sensor1\">sensor1</option>\n            <option value=\"sensor2\">sensor2</option>\n            <option value=\"sensor3\">sensor3</option>\n          </select>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"buildType\">Build Type</label>\n          <select name=\"buildType\" class=\"form-control\" [(ngModel)]=\"newRequestObj.BuildType\">\n            <option value=\"Metal\">Metal</option>\n            <option value=\"Fiber\">Fiber</option>\n          </select>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"motorType\">Motor Type</label>\n          <select name=\"motorType\" class=\"form-control\" [(ngModel)]=\"newRequestObj.MotorType\">\n            <option value=\"Stepper\">Stepper</option>\n            <option value=\"Servo\">Servo</option>\n            <option value=\"PMDC\">PMDC</option>\n          </select>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"wiringType\">Wiring Type</label>\n          <select name=\"wiringType\" class=\"form-control\" [(ngModel)]=\"newRequestObj.WiringType\">\n            <option value=\"Copper\">Copper</option>\n            <option value=\"Aluminium\">Aluminium</option>\n          </select>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"powerSupplyUnit\">Power Supply Unit</label>\n          <select name=\"powerSupplyUnit\" class=\"form-control\" [(ngModel)]=\"newRequestObj.PowerSupplyUnit\">\n            <option value=\"SMPS\">SMPS</option>\n            <option value=\"PS1\">PS1</option>\n            <option value=\"PS2\">PS2</option>\n          </select>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"bluetoothEnabled\">Bluetooth Enabled</label>\n          <select name=\"bluetoothEnabled\" class=\"form-control\" [(ngModel)]=\"newRequestObj.BluetoothEnabled\">\n            <option value=\"B1\">B1</option>\n            <option value=\"B2\">B2</option>\n            <option value=\"B3\">B3</option>\n          </select>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"internetControlled\">Internet Controlled</label>\n          <div class=\"radio\">\n            <label>\n              <input name=\"internetControlled\" type=\"radio\" value=\"true\">Yes\n            </label>\n            <label>\n              <input name=\"internetControlled\" type=\"radio\" value=\"false\">No\n            </label>\n          </div>\n        </div>\n\n          <div class=\"form-group\">\n            <label for=\"cameraEquipped\">Camera Equipped</label>\n            <select name=\"cameraEquipped\" class=\"form-control\" [(ngModel)]=\"newRequestObj.CameraEquipped\">\n              <option value=\"No\">No Camera</option>\n              <option value=\"cam1\">Cam1</option>\n              <option value=\"cam2\">Cam2</option>\n            </select>\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"physicalRemote\">Physical Remote</label>\n            <select name=\"physicalRemote\" class=\"form-control\" [(ngModel)]=\"newRequestObj.PhysicalRemote\">\n              <option value=\"No\">No Remote Controlled</option>\n              <option value=\"remote1\">remote1</option>\n              <option value=\"remote2\">remote2</option>\n            </select>\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"note\">Comments</label>\n            <textarea name=\"note\" class=\"form-control\" rows=\"4\" cols=\"10\" [(ngModel)]=\"newRequestObj.Note\"></textarea>\n          </div>\n\n\n\n<!--\n        <div class=\"checkbox\">\n          <label>\n            <input id=\"inputAddList\" type=\"checkbox\">\n    Add me to e-mail subscribtion list</label>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"inputComments\">Comments</label>\n          <textarea id=\"inputComments\" class=\"form-control\"></textarea>\n        </div>\n  -->\n  \n  \n          <input type=\"submit\" value=\"Submit\" class=\"btn btn-default pull-right\" (click)=\"submitNewRequest()\">\n\n </section>\n </div>\n </div>\n  <!-- row -->\n<!-- content container -->","import { Order } from \"./Order.model\";\r\n\r\n\r\nexport class Payment{\r\n    constructor(\r\n        public PaymentId:number,\r\n        public OrderId:Order,\r\n        public PaymentDate:Date,\r\n        public PaymentAmount:number,\r\n        \r\n        \r\n        )\r\n{\r\n}\r\n}","import { Component, Input, OnInit } from '@angular/core';\nimport { NewRequest } from 'src/app/newRequest.model';\nimport { ProductserviceService } from 'src/app/productservice.service';\nimport { Quotation } from 'src/app/Quotation.model';\nimport { User } from 'src/app/User.model';\n\n@Component({\n  selector: 'app-callrequests',\n  templateUrl: './callrequests.component.html',\n  styleUrls: ['./callrequests.component.css']\n})\nexport class CallrequestsComponent implements OnInit {\n\n  customer:User=JSON.parse(sessionStorage[\"user_dtls\"]);\n  allRequests:[];\n  quotationViewFlag:boolean=false;\n  quotationDetailFlag:boolean=false;\n  allQuotations:[];\n  selectedQuotation:Quotation;\n  selectedRequest:NewRequest;\n\n  constructor(private prodService:ProductserviceService) { }\n\n  ngOnInit(): void {\n    this.prodService.showAllRequestsForParticularUser(this.customer.UserId).subscribe(data=>this.allRequests=data, err=>console.log(err));\n  }\n\n  getStatus(request:NewRequest){\n    if(request.IsValid==true){\n      return \"Pending\";\n    }\n    else{\n      return \"Order completed\";\n    }\n  }\n\n  getClass(request:NewRequest){\n    if(request.IsValid==true){\n      return \"badge badge-danger\";\n    }\n    else{\n      return \"badge badge-success\";\n    }\n  }\n\n  viewQuotations(request:NewRequest){\n    this.selectedRequest=request;\n    this.prodService.getAllQuotations(request.RequestId).subscribe(data=>this.allQuotations=data, err=>console.log(err));\n    this.quotationViewFlag=true;\n  }\n\n  selectQuotation(quotation:Quotation){\n    this.quotationDetailFlag=true;\n    this.selectedQuotation=quotation;\n  }\n\n}\n","<p>Hi {{customer.FirstName}}, showing Requests made by You !</p>\n\n<div class=\"page-content page-container\" id=\"page-content\">\n    <div class=\"padding\">\n        <div class=\"row container d-flex justify-content-center\">\n            <div class=\"col-lg-8 grid-margin stretch-card\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <h4 class=\"card-title\">Requests Table</h4>\n                        <p class=\"card-description\"> Hi {{customer.FirstName}}, showing Requests made by You ! </p>\n                        <div class=\"table-responsive\">\n                            <table class=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th>Request Id</th>\n                                        <th>Product Category</th>\n                                        <th>Created On</th>\n                                        <th>Status</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr *ngFor=\"let req of allRequests\">\n                                        <td>{{req.RequestId}}</td>\n                                        <td>{{req.Category}}</td>\n                                        <td>{{req.RequestDate}}</td>\n                                        <td><label class=\"{{getClass(req)}}\">{{getStatus(req)}}</label></td>\n                                        <td><button (click)=\"viewQuotations(req)\">View Quotations</button></td>\n                                    </tr>\n\n\n\n<!--\n                                    <tr>\n                                        <td>Samso Park</td>\n                                        <td>34424433</td>\n                                        <td>12 May 2017</td>\n                                        <td><label class=\"badge badge-danger\">Pending</label></td>\n                                    </tr>\n                                    <tr>\n                                        <td>Marlo Sanki</td>\n                                        <td>53425532</td>\n                                        <td>15 May 2015</td>\n                                        <td><label class=\"badge badge-warning\">In progress</label></td>\n                                    </tr>\n                                    <tr>\n                                        <td>John ryte</td>\n                                        <td>53275533</td>\n                                        <td>14 May 2017</td>\n                                        <td><label class=\"badge badge-info\">Fixed</label></td>\n                                    </tr>\n                                    <tr>\n                                        <td>Peter mark</td>\n                                        <td>53275534</td>\n                                        <td>16 May 2017</td>\n                                        <td><label class=\"badge badge-success\">Completed</label></td>\n                                    </tr>\n                                    <tr>\n                                        <td>Dave</td>\n                                        <td>53275535</td>\n                                        <td>20 May 2017</td>\n                                        <td><label class=\"badge badge-warning\">In progress</label></td>\n                                    </tr>\n                -->\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n\n<app-cviewquotation *ngIf=\"quotationViewFlag\" [quotations]=\"allQuotations\" [request]=\"selectedRequest\" (selectedQuotation)=\"selectQuotation($event)\"></app-cviewquotation>\n\n\n\n\n<app-cquotationdetails *ngIf=\"quotationDetailFlag\" [quotation]=\"selectedQuotation\" ></app-cquotationdetails>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NewrequestsComponent } from './newrequests/newrequests.component';\nimport { ServedproductsComponent } from './servedproducts/servedproducts.component';\nimport { ServicehomeComponent } from './servicehome/servicehome.component';\nimport { SrequestdetailsComponent } from './srequestdetails/srequestdetails.component';\nimport { ScreatequotationComponent } from './screatequotation/screatequotation.component';\nimport { SordersComponent } from './sorders/sorders.component';\nimport { SquotationssentComponent } from './squotationssent/squotationssent.component';\n\n\n\n@NgModule({\n  declarations: [NewrequestsComponent, ServedproductsComponent, ServicehomeComponent, SrequestdetailsComponent, ScreatequotationComponent, SordersComponent, SquotationssentComponent],\n  imports: [\n    CommonModule, FormsModule\n  ]\n})\nexport class ServiceproviderModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-serviceprovidermenubar',\n  templateUrl: './serviceprovidermenubar.component.html',\n  styleUrls: ['./serviceprovidermenubar.component.css']\n})\nexport class ServiceprovidermenubarComponent implements OnInit {\n\n  constructor(private route :ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  goToHome(){\n    this.router.navigate([\"serviceprovider\"]);\n  }\n\n  goToOrders(){\n    this.router.navigate([\"serviceprovider/orders\"]);\n  }\n\n  goToNewRequests(){\n    this.router.navigate([\"serviceprovider/newRequests\"]);\n  }\n\n  goToPreviousRequests(){\n    alert(\"previous Requests\");\n  }\n\n  goToSentQuotations(){\n    this.router.navigate([\"serviceprovider/quotations\"]);\n  }\n\n  goToLogout(){\n    this.router.navigate([\"logout\"]);\n  }\n  \n\n}\n","\n<script>\n  \n\n  /* Please ❤ this if you like it! */\n  \n  \n  (function($) { \"use strict\";\n  \n  $(function() {\n    var header = $(\".start-style\");\n    $(window).scroll(function() {    \n      var scroll = $(window).scrollTop();\n    \n      if (scroll >= 10) {\n        header.removeClass('start-style').addClass(\"scroll-on\");\n      } else {\n        header.removeClass(\"scroll-on\").addClass('start-style');\n      }\n    });\n  });\t\t\n    \n  //Animation\n  \n  $(document).ready(function() {\n    $('body.hero-anime').removeClass('hero-anime');\n  });\n  \n  //Menu On Hover\n    \n  $('body').on('mouseenter mouseleave','.nav-item',function(e){\n      if ($(window).width() > 750) {\n        var _d=$(e.target).closest('.nav-item');_d.addClass('show');\n        setTimeout(function(){\n        _d[_d.is(':hover')?'addClass':'removeClass']('show');\n        },1);\n      }\n  });\t\n  \n  //Switch light/dark\n  \n  $(\"#switch\").on('click', function () {\n    if ($(\"body\").hasClass(\"dark\")) {\n      $(\"body\").removeClass(\"dark\");\n      $(\"#switch\").removeClass(\"switched\");\n    }\n    else {\n      $(\"body\").addClass(\"dark\");\n      $(\"#switch\").addClass(\"switched\");\n    }\n  });  \n  \n  })(jQuery); \n  </script>\n\n<body class=\"hero-anime\">\t\n\n\t<div class=\"navigation-wrap bg-light start-header start-style\" style=\"margin-bottom: 30%;\">\n\t\t<div class=\"container\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-12\">\n\t\t\t\t\t<nav class=\"navbar navbar-expand-md navbar-light\">\n\t\t\t\t\t\n\t\t\t\t\t\t<span style=\"color: orangered; font-size: 40px; font-style: italic; font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif; text-decoration: purple;\">My Smart Space</span>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n\t\t\t\t\t\t\t<span class=\"navbar-toggler-icon\"></span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n\t\t\t\t\t\t\t<ul class=\"navbar-nav ml-auto py-4 py-md-0\">\n\n                <!--\n\t\t\t\t\t\t\t\t<li class=\"nav-item pl-4 pl-md-0 ml-0 ml-md-4 active\">\n\t\t\t\t\t\t\t\t\t<a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Home</a>\n\t\t\t\t\t\t\t\t\t<div class=\"dropdown-menu\">\n\t\t\t\t\t\t\t\t\t\t<a class=\"dropdown-item\" href=\"#\">Action</a>\n\t\t\t\t\t\t\t\t\t\t<a class=\"dropdown-item\" href=\"#\">Another action</a>\n\t\t\t\t\t\t\t\t\t\t<a class=\"dropdown-item\" href=\"#\">Something else here</a>\n\t\t\t\t\t\t\t\t\t\t<a class=\"dropdown-item\" href=\"#\">Another action</a>\n\t\t\t\t\t\t\t\t\t</div>\n                </li>\n                -->\n                \n\t\t\t\t\t\t\t\t<li class=\"nav-item pl-4 pl-md-0 ml-0 ml-md-4\">\n\t\t\t\t\t\t\t\t\t<a class=\"nav-link\" (click)=\"goToHome()\">Home</a>\n                </li>\n                \n\t\t\t\t\t\t\t\t<li class=\"nav-item pl-4 pl-md-0 ml-0 ml-md-4\">\n\t\t\t\t\t\t\t\t\t<a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" href=\"javascript:void(0)\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Requests</a>\n\t\t\t\t\t\t\t\t\t<div class=\"dropdown-menu\">\n\t\t\t\t\t\t\t\t\t\t<a class=\"dropdown-item\" (click)=\"goToNewRequests()\">New Requests</a>\n\t\t\t\t\t\t\t\t\t\t<a class=\"dropdown-item\" (click)=\"goToPreviousRequests()\">Previous Requests</a>\n\t\t\t\t\t\t\t\t\t</div>\n                </li>\n                \n\t\t\t\t\t\t\t\t<li class=\"nav-item pl-4 pl-md-0 ml-0 ml-md-4\">\n\t\t\t\t\t\t\t\t\t<a class=\"nav-link\" (click)=\"goToOrders()\">Orders</a>\n                </li>\n                \n\t\t\t\t\t\t\t\t<li class=\"nav-item pl-4 pl-md-0 ml-0 ml-md-4\">\n\t\t\t\t\t\t\t\t\t<a class=\"nav-link\" (click)=\"goToSentQuotations()\">Quotations</a>\n                </li>\n                \n                <li class=\"nav-item pl-4 pl-md-0 ml-0 ml-md-4\">\n\t\t\t\t\t\t\t\t\t<a class=\"nav-link\" (click)=\"goToLogout()\">Logout</a>\n                </li>\n\n\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t</nav>\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\n</body>\n\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/User.model';\nimport { MembershipService } from '../membership.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  @Output(\"flag\") flag=new EventEmitter();\n  constructor(private ms : MembershipService, private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  user:User=new User(0, null, null, null, null, 1, null, null, null);\n msg='';\n  \n  registerUser()\n  {\n    this.ms.registerUser(this.user).subscribe(\n      data =>\n      {\n        if(data==null){\n          alert(\"Email already exists...!!!\");\n          this.router.navigate([\"/register\"]);\n        }\n        else{\n        alert(\"Registration successful..\");\n        this.msg=\"Registration success\";\n        this.flag.emit(false);\n        this.router.navigate([\"/login\"]);\n        }\n        \n      },\n      error =>{\n        alert(\"Registration failed...!!!\");\n        this.msg=\"error\";\n      }\n      );\n  }\n\n}\n","<div class=\"container\">\n    <h2>Login form</h2>\n    <form #registerform=\"ngForm\" (ngSubmit)=\"registerUser()\">\n        <small class=\"=\"danger>{{msg}}</small>\n      <div class=\"form-group\">\n        <label for=\"emailId\">Email:</label>\n        <input type=\"email\" class=\"form-control\" id=\"emailId\" placeholder=\"Enter email\" name=\"emailId\" [(ngModel)]=\"user.Email\" required #email=\"ngModel\" [class.is-invalid]=\"email.invalid && email.touched\" pattern=\"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\">\n       <!-- <small class=\"text-danger\" [class.d-none]=\"email.valid || email.untouched\">Email Id is required field</small>-->\n       <div *ngIf=\"email.errors && email.invalid && email.touched\">\n         <small class=\"text-danger\" *ngIf=\"email.errors.required\">Email Id is required </small>\n         <small class=\"text-danger\" *ngIf=\"email.errors.pattern\">Enter valid Email Id</small>\n       </div>\n      </div>\n\n\n\n  <div class=\"form-group\">\n    <label for=\"fname\">First Name:</label>\n    <input type=\"text\" class=\"form-control\" id=\"fname\" placeholder=\"Enter First Name\" name=\"fname\"  [(ngModel)]=\"user.FirstName\" #firstName=\"ngModel\" required  [class.is-invalid]=\"firstName.invalid && firstName.touched\">\n    <small class=\"text-danger\" [class.d-none]=\"firstName.valid || firstName.untouched\">First Name is required field</small>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"lname\">Last Name:</label>\n    <input type=\"text\" class=\"form-control\" id=\"lname\" placeholder=\"Enter Last Name\" name=\"lname\"  [(ngModel)]=\"user.LastName\" #lastName=\"ngModel\" required  [class.is-invalid]=\"lastName.invalid && lastName.touched\">\n    <small class=\"text-danger\" [class.d-none]=\"lastName.valid || lastName.untouched\">Last Name is required field</small>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"pwd\">Password:</label>\n    <input type=\"password\" class=\"form-control\" id=\"pwd\" placeholder=\"Enter password\" name=\"pwd\"  [(ngModel)]=\"user.Password\" #password=\"ngModel\" required  [class.is-invalid]=\"password.invalid && password.touched\">\n    <small class=\"text-danger\" [class.d-none]=\"password.valid || password.untouched\">Password is required field</small>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"cpwd\">Confirm Password:</label>\n    <input type=\"password\" class=\"form-control\" id=\"cpwd\" placeholder=\"Confirm password\" name=\"cpwd\"  (ngModel)=\"user.Password\" #cpassword=\"ngModel\" required  [class.is-invalid]=\"cpassword.invalid && cpassword.touched\">\n    <small class=\"text-danger\" [class.d-none]=\"(cpassword.value== password.value)\">Passwords doesn't match</small>\n\n  </div>\n\n  <!--\n  <div class=\"form-group\">\n    <label for=\"compname\">Company Name:</label>\n    <input type=\"text\" class=\"form-control\" id=\"compname\" placeholder=\"Enter Company Name\" name=\"compname\"  [(ngModel)]=\"user.companyName\" #companyName=\"ngModel\" required  [class.is-invalid]=\"companyName.invalid && companyName.touched\">\n    <small class=\"text-danger\" [class.d-none]=\"companyName.valid || companyName.untouched\">Company Name is required field</small>\n  </div>\n  -->\n\n  <div class=\"form-group\">\n    <label for=\"contactnum\">Contact Number:</label>\n    <input type=\"text\" class=\"form-control\" id=\"contactnum\" placeholder=\"Enter Contact Number\" name=\"contactnum\"  [(ngModel)]=\"user.ContactNumber\" #contactNumber=\"ngModel\" required  [class.is-invalid]=\"contactNumber.invalid && contactNumber.touched\">\n    <small class=\"text-danger\" [class.d-none]=\"contactNumber.valid || contactNumber.untouched\">Contact Number is required field</small>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"addr\">Address:</label>\n    <input type=\"text\" class=\"form-control\" id=\"addr\" placeholder=\"Enter Address\" name=\"addr\"  [(ngModel)]=\"user.Address\" #address=\"ngModel\" required  [class.is-invalid]=\"address.invalid && address.touched\">\n    <small class=\"text-danger\" [class.d-none]=\"address.valid || address.untouched\">Address is required field</small>\n  </div>\n  \n\n\n      <div class=\"checkbox\">\n        <label><input type=\"checkbox\" name=\"remember\"> Remember me</label>\n      </div>\n      <button [disabled]=\"registerform.form.invalid\" type=\"submit\" class=\"btn btn-default\" (ng-click)=\"registerUser()\">Register</button>\n    </form>\n    <!--\n    <small class=\"float-right\" [routerLink]=\"['/login']\">Already register..Login</small>\n    -->\n  </div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SpaModule } from './spa/spa.module';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { DatePipe } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SpaModule,\n    NgbModule,\n  ],\n  providers: [DatePipe],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { NewRequest } from './newRequest.model';\nimport { Order } from './Order.model';\nimport { Product } from './product.model';\nimport { Quotation } from './Quotation.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductserviceService {\n\n  /*\n  baseUrl:string=\"http://localhost:8282/products/\";\n  baseNewRequestUrl=\"http://localhost:8282/newrequest/\";\n  baseQuotationUrl=\"http://localhost:8282/quotations/\";\n  baseOrderUrl=\"http://localhost:8282/orders/\";\n  basePaymentUrl=\"http://localhost:8282/payments/\";\n  */\n\n  baseUrlProducts=\"http://localhost:64734/products/\";\n  baseUrlProductscategory=\"http://localhost:64734/Productscategory/\";\n  baseUrlProductsForServiceProvider=\"http://localhost:64734/ProductsForServiceProvider/\";\n  \n\n  baseUrlNewRequest=\"http://localhost:64734/Newrequest/\";\n  baseUrlUserRequest=\"http://localhost:64734/UserRequest/\";\n  baseUrlNewRequestWithoutQuotationsSent=\"http://localhost:64734/NewRequestWithoutQuotationsSent/\";\n  \n\n  baseUrlQuotations=\"http://localhost:64734/Quotations/\";\n  baseUrlQuotationsForRequest=\"http://localhost:64734/QuotationForRequest/\";\n  baseUrlQuotationReject=\"http://localhost:64734/QuotationReject/\";\n  baseUrlQuotationAccept=\"http://localhost:64734/QuotationAccept/\";\n  baseUrlQuotationsForServiceProvider=\"http://localhost:64734/QuotationsForServiceProvider/\";\n\n  baseUrlOrders=\"http://localhost:64734/Orders/\";\n  baseUrlOrdersForCustomer=\"http://localhost:64734/OrdersForCustomers/\";\n  baseUrlOrdersForServiceProvider=\"http://localhost:64734/OrdersForServiceProvider/\";\n\n  baseUrlPayments=\"http://localhost:64734/Payments/\";\n\n\n\n  constructor(private http:HttpClient) { }\n\n  getAllProducts():Observable<any>{\n    return this.http.get(this.baseUrlProducts);\n    //http://localhost:64734/products/\n  }\n\n  getProductById(id:number):Observable<any>{\n    return this.http.get(this.baseUrlProducts + id);\n    //http://localhost:64734/products/1\n  }\n\n  addProduct(product:Product):Observable<any>{\n    return this.http.post(this.baseUrlProducts, product);\n  }\n\n  getProductsByCategory(category:string):Observable<any>{\n    let categoryId:number;\n    switch(category){\n      case \"DOOR\": categoryId=0;\n      break;\n      case \"WINDOW\": categoryId=1;\n      break;\n    }\n    return this.http.get(this.baseUrlProductscategory + categoryId);\n    //http://localhost:64734/productscategory/1\n  }\n\n  getAllProductCategories():Observable<any>{\n    return this.http.get(this.baseUrlProductscategory);\n  }\n\n\n\n\n\n\n\n\n  getRequestById(requestId:number):Observable<any>{\n    return this.http.get(this.baseUrlNewRequest + requestId);\n    //NewrequestController\n  }\n\n\n  submitNewRequest(newRequest:NewRequest):Observable<any>{\n    return this.http.post(this.baseUrlNewRequest, newRequest);\n    //NewrequestController\n  }\n\n  showAllRequestsForParticularUser(userId:number):Observable<any>{\n    return this.http.get(this.baseUrlUserRequest + userId);\n    //UserRequestController\n  }\n\n  getAllQuotations(requestId:number):Observable<any>{\n    return this.http.get(this.baseUrlQuotationsForRequest + requestId);\n  }\n\n\n\n\n\n\n\n\n\n  rejectQuotation(quotation:Quotation):Observable<any>{\n    return this.http.get(this.baseUrlQuotationReject + quotation.QuotationId);\n  }\n\n  acceptQuotation(quotation:Quotation):Observable<any>{\n    return this.http.get(this.baseUrlQuotationAccept + quotation.QuotationId);\n  }\n\n  submitNewQuotation(newQuotation:Quotation):Observable<any>{\n    return this.http.post(this.baseUrlQuotations, newQuotation);\n  }\n\n  getAllQuotationsSentForServiceProvider(serviceProviderId):Observable<any>{\n    return this.http.get(this.baseUrlQuotationsForServiceProvider + serviceProviderId);\n  }\n\n\n\n\n\n\n\n\n\n  placeOrder(newOrder:Order):Observable<any>{\n    return this.http.post(this.baseUrlOrders, newOrder);\n  }\n\n  getOrderById(orderId:number):Observable<any>{\n    return this.http.get(this.baseUrlOrders + orderId);\n  }\n\n  getOrders(customerId:number):Observable<any>{\n    return this.http.get(this.baseUrlOrdersForCustomer + customerId);\n  }\n\n  getOrdersByServiceProviderId(serviceProviderId):Observable<any>{\n    return this.http.get(this.baseUrlOrdersForServiceProvider + serviceProviderId);\n  }\n\n\n\n\n\n\n\n  getservedProductsforServiceProvider(serviceProviderId:number):Observable<any>{\n    return this.http.get(this.baseUrlProductsForServiceProvider + serviceProviderId);\n  }\n\n  getNewRequestsWithoutQuotationSent(serviceProviderId:number):Observable<any>{\n    return this.http.get(this.baseUrlNewRequestWithoutQuotationsSent + serviceProviderId);\n  }\n\n\n\n\n  insertPayment(newPayment):Observable<any>{\n    return this.http.post(this.baseUrlPayments, newPayment);\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ProductserviceService } from 'src/app/productservice.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NewRequest } from 'src/app/newRequest.model';\nimport { Quotation } from 'src/app/Quotation.model';\nimport { User } from 'src/app/User.model';\n\n@Component({\n  selector: 'app-screatequotation',\n  templateUrl: './screatequotation.component.html',\n  styleUrls: ['./screatequotation.component.css']\n})\nexport class ScreatequotationComponent implements OnInit {\n\n  requestId:number;\n  request:NewRequest;\n  newQuotation:Quotation;\n  serviceProvider:User=JSON.parse(sessionStorage[\"user_dtls\"]);\n\n  constructor(private prodService:ProductserviceService, private route :ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params=>{\n      this.requestId=Number(params.get(\"id\"));\n      \n      this.prodService.getRequestById(this.requestId).subscribe(data=>{\n        this.request=data; \n        alert(\"request loaded\");\n\n        this.newQuotation=new Quotation(0, this.request, this.serviceProvider, null, null, 0);\n\n      }, err=>console.log(err));\n    });\n  }\n\n\n  submitNewQuotation(){\n    alert(\"submitting...\");\n\n    this.prodService.submitNewQuotation(this.newQuotation).subscribe(data=>{\n      alert(\"Quotation Submitted...\");\n      this.router.navigate([\"serviceprovider/newRequests\"]);\n    }, err=>{\n      console.log(err);\n      alert(\"Quotation NOT Submitted...\");\n    })\n  }\n\n\n}\n","<div class=\"container\" style=\"margin-top: 10%;\">\n    <div class=\"row\">\n      <section class=\"col-xs-12\">\n\n          <div class=\"form-group\">\n            <label for=\"finalPrice\">Final Price</label>\n            <input class=\"form-control\" type=\"number\" name=\"finalPrice\" placeholder=\"Final Price\" [(ngModel)]=\"newQuotation.FinalPrice\" required>\n          </div>\n  \n          <div class=\"form-group\">\n            <label for=\"response\">Response</label>\n            <textarea name=\"response\" class=\"form-control\" rows=\"4\" cols=\"10\" [(ngModel)]=\"newQuotation.Response\"></textarea>\n          </div>\n\n         <input type=\"submit\" value=\"Submit\" class=\"btn btn-default pull-right\" (click)=\"submitNewQuotation()\">\n  \n   </section>\n   </div>\n   </div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CproductlistComponent } from './cproductlist/cproductlist.component';\nimport { CproductdetailsComponent } from './cproductdetails/cproductdetails.component';\nimport { CnewrequestComponent } from './cnewrequest/cnewrequest.component';\nimport { FormsModule } from '@angular/forms';\nimport { CallrequestsComponent } from './callrequests/callrequests.component';\nimport { CviewquotationComponent } from './cviewquotation/cviewquotation.component';\nimport { CquotationdetailsComponent } from './cquotationdetails/cquotationdetails.component';\nimport { CordersComponent } from './corders/corders.component';\nimport { PaymentComponent } from './payment/payment.component';\n\n\n\n@NgModule({\n  declarations: [CproductlistComponent, CproductdetailsComponent, CnewrequestComponent, CallrequestsComponent, CviewquotationComponent, CquotationdetailsComponent, CordersComponent, PaymentComponent],\n  imports: [\n    CommonModule, FormsModule\n  ],\n  exports:[CproductlistComponent, CproductdetailsComponent, CnewrequestComponent]\n})\nexport class CustomerModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Order } from 'src/app/Order.model';\nimport { ProductserviceService } from 'src/app/productservice.service';\nimport { User } from 'src/app/User.model';\n\n@Component({\n  selector: 'app-corders',\n  templateUrl: './corders.component.html',\n  styleUrls: ['./corders.component.css']\n})\nexport class CordersComponent implements OnInit {\n\n  allOrders:[];\n  customer:User=JSON.parse(sessionStorage[\"user_dtls\"]);\n\n  constructor(private prodService:ProductserviceService, private route :ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    this.prodService.getOrders(this.customer.UserId).subscribe(\n      data=>{\n        this.allOrders=data;\n      }, err=>{\n        console.log(err);\n      }\n    )\n  }\n\n  getStatus(order:Order){\n    if(order.OrderStatus==0){\n      return \"NEW\";\n    }\n    else if(order.OrderStatus==2){\n      return \"UNDERPROCESSING\";\n    }\n    else if(order.OrderStatus==1){\n      return \"REJECTED\";\n    }\n    else if(order.OrderStatus==3){\n      return \"COMPLETED\";\n    }\n  }\n\n  getClass(order:Order){\n    if(order.OrderStatus==0){\n      return \"badge badge-warning\";\n    }\n    else if(order.OrderStatus==2){\n      return \"badge badge-info\";\n      \n    }\n    else if(order.OrderStatus==1){\n      return \"badge badge-danger\";\n    }\n    else if(order.OrderStatus==3){\n      return \"badge badge-success\";\n    }\n  }\n\n  payNow(order:Order){\n    this.router.navigate([\"payment/\"+order.OrderId]);\n  }\n\n}\n","<p>Hi {{customer.FirstName}}, showing your all Orders</p>\n\n<div class=\"page-content page-container\" id=\"page-content\">\n    <div class=\"padding\">\n        <div class=\"row container d-flex justify-content-center\">\n            <div class=\"col-lg-8 grid-margin stretch-card\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <h4 class=\"card-title\">All Orders</h4>\n                        <p class=\"card-description\"> Hi {{customer.FirstName}}, showing your all Orders...</p>\n                        <div class=\"table-responsive\">\n                            <table class=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th>Company</th>\n                                        <th>Service Provider Email</th>\n                                        <th>Product Category</th>\n                                        <th>Amount</th>\n                                        <th>Order Date</th>\n                                        <th>Order Status</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr *ngFor=\"let order of allOrders\">\n                                        <td>{{order.ServiceProviderId.CompanyName}}</td>\n                                        <td>{{order.ServiceProviderId.Email}}</td>\n                                        <td>{{order.ProductId.Category}}</td>\n                                        <td>{{order.TotalAmount}}</td>\n                                        <td>{{order.OrderDate}}</td>\n                                        <td><label class=\"{{getClass(order)}}\">{{getStatus(order)}}</label></td>\n                                        <td *ngIf=\"!order.PaymentStatus\">\n                                            <button type=\"button\" class=\"btn btn-primary\" (click)=\"payNow(order)\">Pay Now</button></td>\n                                    </tr>\n                                    \n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>products works!</p>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Quotation } from 'src/app/Quotation.model';\n\n@Component({\n  selector: 'app-cquotationdetails',\n  templateUrl: './cquotationdetails.component.html',\n  styleUrls: ['./cquotationdetails.component.css']\n})\nexport class CquotationdetailsComponent implements OnInit {\n\n  @Input(\"quotation\")quotation:Quotation;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  \n\n}\n","import { User } from \"./User.model\";\r\n\r\nexport class NewRequest{\r\n    constructor(\r\n        public RequestId:number,\r\n        public UserId:User,\r\n        public RequestDate:Date,\r\n        public Category:string,\r\n        public Dimension:string,\r\n        public Weight:number,\r\n        public Controller:string,\r\n        public Sensor:string,\r\n        public BuildType:string,\r\n        public MotorType:string,\r\n        public WiringType:string,\r\n        public PowerSupplyUnit:string,\r\n        public BluetoothEnabled:string,\r\n        public InternetControlled:boolean,\r\n        public CameraEquipped:string,\r\n        public PhysicalRemote:string,\r\n        public Note:string,\r\n        public IsValid:boolean,\r\n    ){}\r\n}","import { Product } from \"./product.model\";\r\nimport { User } from \"./User.model\";\r\n\r\nexport class Order{\r\n    constructor(\r\n        public OrderId:number,\r\n        public CustomerId:User,\r\n        public ProductId:Product,\r\n        public ServiceProviderId:User,\r\n        public Quantity:number,\r\n        public TotalAmount:number,\r\n        public OrderStatus:number,\r\n        public PaymentStatus:boolean,\r\n        public OrderDate:Date,\r\n        public Note:string,\r\n        \r\n        )\r\n{\r\n}\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdminhomeComponent } from './adminhome/adminhome.component';\nimport { AuserslistComponent } from './auserslist/auserslist.component';\nimport { AserviceproviderlistComponent } from './aserviceproviderlist/aserviceproviderlist.component';\nimport { StandardModule } from '../standard/standard.module';\nimport { AddserviceproviderComponent } from './addserviceprovider/addserviceprovider.component';\nimport { FormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [AdminhomeComponent, AuserslistComponent, AserviceproviderlistComponent, AddserviceproviderComponent],\n  imports: [\n    CommonModule, StandardModule, FormsModule\n  ], \n  exports:[AdminhomeComponent, AuserslistComponent, AserviceproviderlistComponent]\n})\nexport class AdminModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MembershipService } from 'src/app/membership/membership.service';\n\n@Component({\n  selector: 'app-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.css']\n})\nexport class ContainerComponent implements OnInit {\n\n  loginStatus:boolean = false;\n  actor:String = null;\n  \n\n  constructor(private route : ActivatedRoute, private router:Router, public ms:MembershipService) { }\n\n  ngOnInit(): void {\n  }\n\n  \n\n\n}\n","\n<app-login *ngIf=\"!ms.loginStatus\"></app-login>\n\n<app-customermenubar *ngIf=\"ms.loginStatus && ms.user.Role==1\"></app-customermenubar>\n\n<app-serviceprovidermenubar *ngIf=\"ms.loginStatus && ms.user.Role==2\"></app-serviceprovidermenubar>\n\n<app-adminmenubar *ngIf=\"ms.loginStatus && ms.user.Role==0\"> </app-adminmenubar>\n\n<router-outlet *ngIf=\"ms.loginStatus\"></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProductserviceService } from 'src/app/productservice.service';\nimport { Quotation } from 'src/app/Quotation.model';\nimport { User } from 'src/app/User.model';\n\n@Component({\n  selector: 'app-squotationssent',\n  templateUrl: './squotationssent.component.html',\n  styleUrls: ['./squotationssent.component.css']\n})\nexport class SquotationssentComponent implements OnInit {\n\n  serviceProvider:User=JSON.parse(sessionStorage[\"user_dtls\"]);\n  allQuotationssent:[]=null;\n  newQuotationsPendingFromUser = new Array();\n  oldQuotations = new Array();\n\n  constructor(private prodService:ProductserviceService, private route :ActivatedRoute, private router: Router) {  }\n\n  ngOnInit(): void {\n    this.prodService.getAllQuotationsSentForServiceProvider(this.serviceProvider.UserId).subscribe(data=>{\n      this.allQuotationssent=data;\n\n      this.allQuotationssent.forEach((quotation:Quotation)=>{\n        if(quotation.AcceptanceStatus==0){\n          this.newQuotationsPendingFromUser.push(quotation);\n        }else{\n          this.oldQuotations.push(quotation);\n        }\n      });\n\n    }, err=>{\n      console.log(err);\n    });\n  }\n\n  getClass(quotation:Quotation){\n    if(quotation.AcceptanceStatus==0){\n      return \"badge badge-warning\";\n    }\n    else if(quotation.AcceptanceStatus==1){\n      return \"badge badge-success\";\n    }\n    else if(quotation.AcceptanceStatus==2){\n      return \"badge badge-danger\";\n    }\n  }\n\n  getStatus(quotation:Quotation){\n    if(quotation.AcceptanceStatus==0){\n      return \"New\";\n    }\n    else if(quotation.AcceptanceStatus==1){\n      return \"Accepted\";\n    }\n    else if(quotation.AcceptanceStatus==2){\n      return \"Rejected\";\n    }\n  }\n\n}\n","<div class=\"row\" style=\"margin-top: 10%; margin-left: 5%;\">\n\n    <div class=\"column\">\n        <div *ngIf=\"this.newQuotationsPendingFromUser.length==0\">\n            <div>No New Quotations Pending from user...</div>\n        </div>\n        <div *ngIf=\"this.newQuotationsPendingFromUser.length!=0\">\n\n            <div class=\"page-content page-container\" id=\"page-content\">\n                <div class=\"padding\">\n                    <div class=\"row container d-flex justify-content-center\">\n                        <div class=\"col-lg-8 grid-margin stretch-card\">\n                            <div class=\"card\">\n                                <div class=\"card-body\">\n                                    <h4 class=\"card-title\"> NEW QUOTATIONS</h4>\n                                    <p class=\"card-description\"> Hi {{serviceProvider.FirstName}}, showing NEW Quotations sent by You !! (Pending from User)</p>\n                                    <div class=\"table-responsive\">\n                                        <table class=\"table\">\n                                            <thead>\n                                                <tr>\n                                                    <th style=\"white-space: nowrap;\">Quotation Id</th>\n                                                    <th>Customer Email</th>\n                                                    <th>Price</th>\n                                                    <th>Quotation Status</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <tr *ngFor=\"let quotation of newQuotationsPendingFromUser\">\n                                                    <td>{{quotation.QuotationId}}</td>\n                                                    <td>{{quotation.RequestId.UserId.Email}}</td>\n                                                    <td>{{quotation.FinalPrice}}</td>\n                                                    <td><label class=\"{{getClass(quotation)}}\">{{getStatus(quotation)}}</label></td>\n                                                    \n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n    <div class=\"column\">\n        <div *ngIf=\"this.oldQuotations.length==0\">\n            <div>No Old Quotations sent by You yet...</div>\n        </div>\n        <div *ngIf=\"this.oldQuotations.length!=0\">\n            <div class=\"page-content page-container\" id=\"page-content\">\n                <div class=\"padding\">\n                    <div class=\"row container d-flex justify-content-center\">\n                        <div class=\"col-lg-8 grid-margin stretch-card\">\n                            <div class=\"card\">\n                                <div class=\"card-body\">\n                                    <h4 class=\"card-title\">OLD QUOTATIONS</h4>\n                                    <p class=\"card-description\"> Hi {{serviceProvider.firstName}}, showing previous Quotations sent by You !! </p>\n                                    <div class=\"table-responsive\">\n                                        <table class=\"table\">\n                                            <thead>\n                                                <tr style=\"white-space: nowrap;\">\n                                                    <th>Quotation Id</th>\n                                                    <th>Customer Email</th>\n                                                    <th>Price</th>\n                                                    <th>Quotation Status</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <tr *ngFor=\"let quotation of oldQuotations\">\n                                                    <td>{{quotation.quotationId}}</td>\n                                                    <td>{{quotation.requestId.userId.email}}</td>\n                                                    <td>{{quotation.finalPrice}}</td>\n                                                    <td><label class=\"{{getClass(quotation)}}\">{{getStatus(quotation)}}</label></td>\n                                                    \n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n</div>\n        \n\n        \n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProductserviceService } from 'src/app/productservice.service';\nimport { User } from 'src/app/User.model';\n\n@Component({\n  selector: 'app-servicehome',\n  templateUrl: './servicehome.component.html',\n  styleUrls: ['./servicehome.component.css']\n})\nexport class ServicehomeComponent implements OnInit {\n\n  serviceProvider:User=JSON.parse(sessionStorage[\"user_dtls\"]);\n\n  constructor(private prodService:ProductserviceService, private route :ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n}\n","<p>Welcome {{serviceProvider.FirstName}}</p>\n\n<app-servedproducts></app-servedproducts>","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/User.model';\n\n@Component({\n  selector: 'app-adminhome',\n  templateUrl: './adminhome.component.html',\n  styleUrls: ['./adminhome.component.css']\n})\nexport class AdminhomeComponent implements OnInit {\n\n  admin:User=JSON.parse(sessionStorage[\"user_dtls\"]);\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n\n}\n","\n\n\n<h2 style=\"margin-top: 10%;\">Welcome, {{admin.FirstName}}</h2>\n","import { Route } from '@angular/compiler/src/core';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MembershipService } from 'src/app/membership/membership.service';\n\n@Component({\n  selector: 'app-adminmenubar',\n  templateUrl: './adminmenubar.component.html',\n  styleUrls: ['./adminmenubar.component.css']\n})\nexport class AdminmenubarComponent implements OnInit {\n\n  constructor(private ms:MembershipService, private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  showAllUsers(){\n    this.router.navigate([\"admin/users\"]);\n  }\n\n  showAllServiceProviders(){\n    this.router.navigate([\"admin/serviceprovider\"]);\n  }\n\n  goToLogout(){\n    this.router.navigate([\"logout\"]);\n  }\n\n}\n","\n<script>\n  \n    (function($) { \"use strict\";\n    \n    $(function() {\n      var header = $(\".start-style\");\n      $(window).scroll(function() {    \n        var scroll = $(window).scrollTop();\n      \n        if (scroll >= 10) {\n          header.removeClass('start-style').addClass(\"scroll-on\");\n        } else {\n          header.removeClass(\"scroll-on\").addClass('start-style');\n        }\n      });\n    });\t\t\n      \n    //Animation\n    \n    $(document).ready(function() {\n      $('body.hero-anime').removeClass('hero-anime');\n    });\n    \n    //Menu On Hover\n      \n    $('body').on('mouseenter mouseleave','.nav-item',function(e){\n        if ($(window).width() > 750) {\n          var _d=$(e.target).closest('.nav-item');_d.addClass('show');\n          setTimeout(function(){\n          _d[_d.is(':hover')?'addClass':'removeClass']('show');\n          },1);\n        }\n    });\t\n    \n    //Switch light/dark\n    \n    $(\"#switch\").on('click', function () {\n      if ($(\"body\").hasClass(\"dark\")) {\n        $(\"body\").removeClass(\"dark\");\n        $(\"#switch\").removeClass(\"switched\");\n      }\n      else {\n        $(\"body\").addClass(\"dark\");\n        $(\"#switch\").addClass(\"switched\");\n      }\n    });  \n    \n    })(jQuery); \n    </script>\n  \n  <body class=\"hero-anime\">\t\n  \n      <div class=\"navigation-wrap bg-light start-header start-style\">\n          <div class=\"container\">\n              <div class=\"row\">\n                  <div class=\"col-12\">\n                      <nav class=\"navbar navbar-expand-md navbar-light\">\n                      \n                          <span style=\"color: orangered; font-size: 40px; font-style: italic; font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\">My Smart Space</span>\n                          \n                          <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                              <span class=\"navbar-toggler-icon\"></span>\n                          </button>\n                          \n                          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                              <ul class=\"navbar-nav ml-auto py-4 py-md-0\">\n  \n                  <!--\n                                  <li class=\"nav-item pl-4 pl-md-0 ml-0 ml-md-4 active\">\n                                      <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Home</a>\n                                      <div class=\"dropdown-menu\">\n                                          <a class=\"dropdown-item\" href=\"#\">Action</a>\n                                          <a class=\"dropdown-item\" href=\"#\">Another action</a>\n                                          <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n                                          <a class=\"dropdown-item\" href=\"#\">Another action</a>\n                                      </div>\n                  </li>\n                  -->\n                  \n                                  <li class=\"nav-item pl-4 pl-md-0 ml-0 ml-md-4\">\n                                      <a class=\"nav-link\" (click)=\"showAllUsers()\">Users</a>\n                  </li>\n                  \n                  <li class=\"nav-item pl-4 pl-md-0 ml-0 ml-md-4\">\n                                      <a class=\"nav-link\" (click)=\"showAllServiceProviders()\">Service Providers</a>\n                  \n                  \n                  <li class=\"nav-item pl-4 pl-md-0 ml-0 ml-md-4\">\n                                      <a class=\"nav-link\" (click)=\"goToLogout()\">Logout</a>\n                  </li>\n  \n  \n                              </ul>\n                          </div>\n                          \n                      </nav>\t\t\n                  </div>\n              </div>\n          </div>\n      </div>\n  \n  \n  </body>\n  \n  ","import { Component, OnInit } from '@angular/core';\nimport { ProductserviceService } from 'src/app/productservice.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  allProducts:[];\n  constructor(private prodService:ProductserviceService) { }\n\n  ngOnInit(): void {\n    this.prodService.getAllProducts().subscribe(\n      data=>{\n        this.allProducts=data;\n      },\n      err=>{\n        console.log(err);\n      }\n    )\n  }\n\n}\n","<p>home works!</p>\n\n<!--<div *ngIf=\"isDetailsSelected==false\"  class=\"col-md-12\">-->\n    <div>\n        Logged In as: \n    </div>\n\n    <ul class=\"list-group product-list-contents\" >\n        <li (click)=\"selectProduct(l)\" *ngFor=\"let p of allProducts\">    \n            <div  class=\"col-md-4\">\n                <!--<img class=\"thumbnail\" [src]=\"'http://localhost:4200/assets/images/'+l.image\" alt=\"\">-->     \n                <div><strong>Product: </strong>{{p.productId}}</div>\n                <div><strong>Service Provider: </strong> {{p.serviceProviderId.userId}}</div>\n                <div><strong>Category: </strong> {{p.category}}</div>\n            </div>\n        </li>\n    </ul>\n","import { NewRequest } from \"./newRequest.model\";\r\nimport { User } from \"./User.model\";\r\n\r\nexport class Quotation{\r\n    constructor(\r\n        public QuotationId:number,\r\n        public RequestId:NewRequest,\r\n        public ServiceProviderId:User,\r\n        public FinalPrice:number,\r\n        public Response:String,\r\n        public AcceptanceStatus:number\r\n    ){}\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MembershipService } from 'src/app/membership/membership.service';\nimport { User } from 'src/app/User.model';\n\n@Component({\n  selector: 'app-addserviceprovider',\n  templateUrl: './addserviceprovider.component.html',\n  styleUrls: ['./addserviceprovider.component.css']\n})\nexport class AddserviceproviderComponent implements OnInit {\n\n  constructor(private ms : MembershipService, private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  user:User=new User(null, null, null, null, null, 2, null, null, null);\n\n  addServiceProvider(){\n    this.ms.registerUser(this.user).subscribe(\n      data=>{\n        if(data==null){\n          alert(\"Email already exists...!!!\");\n        }\n        else{\n        alert(\"Service Provider added successfully...\");\n        this.router.navigate([\"admin/serviceprovider\"]);\n        }\n      }\n    )\n  }\n\n}\n","<div class=\"container\" style=\"margin-top: 5%;\">\n    <h2>Enter Service Provider Details:</h2>\n    <form #registerform=\"ngForm\" (ngSubmit)=\"addServiceProvider()\">\n      <div class=\"form-group\">\n        <label for=\"emailId\">Email:</label>\n        <input type=\"email\" class=\"form-control\" id=\"emailId\" placeholder=\"Enter email\" name=\"emailId\" [(ngModel)]=\"user.Email\" required #email=\"ngModel\" [class.is-invalid]=\"email.invalid && email.touched\" pattern=\"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\">\n       <!-- <small class=\"text-danger\" [class.d-none]=\"email.valid || email.untouched\">Email Id is required field</small>-->\n       <div *ngIf=\"email.errors && email.invalid && email.touched\">\n         <small class=\"text-danger\" *ngIf=\"email.errors.required\">Email Id is required </small>\n         <small class=\"text-danger\" *ngIf=\"email.errors.pattern\">Enter valid Email Id</small>\n       </div>\n      </div>\n\n\n\n  <div class=\"form-group\">\n    <label for=\"fname\">First Name:</label>\n    <input type=\"text\" class=\"form-control\" id=\"fname\" placeholder=\"Enter First Name\" name=\"fname\"  [(ngModel)]=\"user.FirstName\" #firstName=\"ngModel\" required  [class.is-invalid]=\"firstName.invalid && firstName.touched\">\n    <small class=\"text-danger\" [class.d-none]=\"firstName.valid || firstName.untouched\">First Name is required field</small>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"lname\">Last Name:</label>\n    <input type=\"text\" class=\"form-control\" id=\"lname\" placeholder=\"Enter Last Name\" name=\"lname\"  [(ngModel)]=\"user.LastName\" #lastName=\"ngModel\" required  [class.is-invalid]=\"lastName.invalid && lastName.touched\">\n    <small class=\"text-danger\" [class.d-none]=\"lastName.valid || lastName.untouched\">Last Name is required field</small>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"pwd\">Password:</label>\n    <input type=\"password\" class=\"form-control\" id=\"pwd\" placeholder=\"Enter password\" name=\"pwd\"  [(ngModel)]=\"user.Password\" #password=\"ngModel\" required  [class.is-invalid]=\"password.invalid && password.touched\">\n    <small class=\"text-danger\" [class.d-none]=\"password.valid || password.untouched\">Password is required field</small>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"cpwd\">Confirm Password:</label>\n    <input type=\"password\" class=\"form-control\" id=\"cpwd\" placeholder=\"Confirm password\" name=\"cpwd\"  (ngModel)=\"user.Password\" #cpassword=\"ngModel\" required  [class.is-invalid]=\"cpassword.invalid && cpassword.touched\">\n    <small class=\"text-danger\" [class.d-none]=\"(cpassword.value== password.value)\">Passwords doesn't match</small>\n\n  </div>\n\n  \n  <div class=\"form-group\">\n    <label for=\"compname\">Company Name:</label>\n    <input type=\"text\" class=\"form-control\" id=\"compname\" placeholder=\"Enter Company Name\" name=\"compname\"  [(ngModel)]=\"user.CompanyName\" #companyName=\"ngModel\" required  [class.is-invalid]=\"companyName.invalid && companyName.touched\">\n    <small class=\"text-danger\" [class.d-none]=\"companyName.valid || companyName.untouched\">Company Name is required field</small>\n  </div>\n\n\n  <div class=\"form-group\">\n    <label for=\"contactnum\">Contact Number:</label>\n    <input type=\"text\" class=\"form-control\" id=\"contactnum\" placeholder=\"Enter Contact Number\" name=\"contactnum\"  [(ngModel)]=\"user.ContactNumber\" #contactNumber=\"ngModel\" required  [class.is-invalid]=\"contactNumber.invalid && contactNumber.touched\">\n    <small class=\"text-danger\" [class.d-none]=\"contactNumber.valid || contactNumber.untouched\">Contact Number is required field</small>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"addr\">Address:</label>\n    <input type=\"text\" class=\"form-control\" id=\"addr\" placeholder=\"Enter Address\" name=\"addr\"  [(ngModel)]=\"user.Address\" #address=\"ngModel\" required  [class.is-invalid]=\"address.invalid && address.touched\">\n    <small class=\"text-danger\" [class.d-none]=\"address.valid || address.untouched\">Address is required field</small>\n  </div>\n  \n\n\n      <button [disabled]=\"registerform.form.invalid\" type=\"submit\" class=\"btn btn-default\" (ng-click)=\"addServiceProvider()\">Add Service Provider</button>\n    </form>\n    <!--\n    <small class=\"float-right\" [routerLink]=\"['/login']\">Already register..Login</small>\n    -->\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProductserviceService } from 'src/app/productservice.service';\nimport { User } from 'src/app/User.model';\n\n@Component({\n  selector: 'app-servedproducts',\n  templateUrl: './servedproducts.component.html',\n  styleUrls: ['./servedproducts.component.scss']\n})\nexport class ServedproductsComponent implements OnInit {\n\n  serviceProvider:User=JSON.parse(sessionStorage[\"user_dtls\"]);\n  servedProductList:[];\n\n  constructor(private prodService:ProductserviceService, private route :ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    this.prodService.getservedProductsforServiceProvider(this.serviceProvider.UserId).subscribe(\n      data=>{\n        this.servedProductList=data;\n      },\n      err=>{\n        console.log(err);\n      }\n    )\n  }\n\n\n\n\n  viewNewRequests(){\n    this.router.navigate([\"serviceprovider/newRequests\"]);\n  }\n\n}\n","\n  <div class=\"page-content page-container\" id=\"page-content\">\n    <div class=\"padding\">\n        <div class=\"row container d-flex justify-content-center\">\n            <div class=\"col-lg-8 grid-margin stretch-card\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <h4 class=\"card-title\">Previous Delivered Products</h4>\n                        <p class=\"card-description\"> Hi {{serviceProvider.FirstName}}, showing previous delivered products by You ! </p>\n                        <div class=\"table-responsive\">\n                            <table class=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th>Product Id</th>\n                                        <th>Service Provider Emaill</th>\n                                        <th>Price</th>\n                                        <th>Rating</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr *ngFor=\"let p of servedProductList\">\n                                        <td>{{p.ProductId}}</td>\n                                        <td>{{p.ServiceProviderId.Email}}</td>\n                                        <td>{{p.FinalPrice}}</td>\n                                        <td>{{p.Rating}}</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home/home.component';\nimport { ProductsComponent } from './products/products.component';\nimport { AboutusComponent } from './aboutus/aboutus.component';\nimport { ContactusComponent } from './contactus/contactus.component';\nimport { CustomermenubarComponent } from './customermenubar/customermenubar.component';\nimport { ServiceprovidermenubarComponent } from './serviceprovidermenubar/serviceprovidermenubar.component';\nimport { AdminmenubarComponent } from './adminmenubar/adminmenubar.component';\n\n\n\n@NgModule({\n  declarations: [HomeComponent, ProductsComponent, AboutusComponent, ContactusComponent, CustomermenubarComponent, ServiceprovidermenubarComponent, AdminmenubarComponent],\n  imports: [\n    CommonModule\n  ],\n  exports:[HomeComponent, ProductsComponent, AboutusComponent, ContactusComponent, CustomermenubarComponent, ServiceprovidermenubarComponent, AdminmenubarComponent]\n})\n\nexport class StandardModule { }","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LogoutComponent } from './logout/logout.component';\nimport { RegisterComponent } from './register/register.component';\n\n\n\n@NgModule({\n  declarations: [LoginComponent, LogoutComponent, RegisterComponent,],\n  imports: [\n    CommonModule, FormsModule, HttpClientModule, FormsModule\n  ],\n  exports:[LoginComponent, LogoutComponent, RegisterComponent]\n})\nexport class MembershipModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgbDateAdapter } from '@ng-bootstrap/ng-bootstrap';\nimport { Order } from 'src/app/Order.model';\nimport { ProductserviceService } from 'src/app/productservice.service';\nimport { User } from 'src/app/User.model';\n\n@Component({\n  selector: 'app-sorders',\n  templateUrl: './sorders.component.html',\n  styleUrls: ['./sorders.component.css']\n})\nexport class SordersComponent implements OnInit {\n\n  ordersList:[];\n  serviceProvider:User=JSON.parse(sessionStorage[\"user_dtls\"]);\n\n  constructor(private prodService:ProductserviceService, private route :ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    this.prodService.getOrdersByServiceProviderId(this.serviceProvider.UserId).subscribe(data=>{\n      this.ordersList=data;\n    }, err=>{\n      console.log(err);\n    });\n  }\n\n  getClass(order:Order){\n    if(order.OrderStatus==0){\n      return \"badge badge-warning\";\n    }\n    else if(order.OrderStatus==2){\n      return \"badge badge-info\";\n    }\n    else if(order.OrderStatus==3){\n      return \"badge badge-success\";\n    }\n  }\n\n  getStatus(order:Order){\n    if(order.OrderStatus==0){\n      return \"NEW\";\n    }\n    else if(order.OrderStatus==2){\n      return \"UNDERPROCESSING\";\n    }\n    else if(order.OrderStatus==3){\n      return \"COMPLETED\";\n    }\n  }\n\n  getPaymentClass(order:Order){\n    if(order.PaymentStatus==false){\n      return \"badge badge-danger\";\n    }\n    else{\n      return \"badge badge-success\";\n    }\n  }\n\n  getPaymentStatus(order:Order){\n    if(order.PaymentStatus==false){\n      return \"PENDING\";\n    }\n    else{\n      return \"DONE\";\n    }\n  }\n\n  changeOrderStatus(event:any, order:Order){\n    order.OrderStatus=event.target.value;\n    this.prodService.placeOrder(order).subscribe(data=>alert(\"Status Changed...\"), err=>alert(\"Status not changed...!!!\"));\n  }\n\n}\n","<div class=\"page-content page-container\" id=\"page-content\">\n    <div class=\"padding\">\n        <div class=\"row container d-flex justify-content-center\">\n            <div class=\"col-lg-8 grid-margin stretch-card\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <h4 class=\"card-title\">ORDERS</h4>\n                        <p class=\"card-description\"> Hi {{serviceProvider.FirstName}}, showing Orders for You ! </p>\n                        <div class=\"table-responsive\">\n                            <table class=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th>Order Id</th>\n                                        <th>Customer Email</th>\n                                        <th>Order Date</th>\n                                        <th>Product Id</th>\n                                        <th>Product Price</th>\n                                        <th>Payment Status</th>\n                                        <th>Order Status</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr *ngFor=\"let order of ordersList\">\n                                        <td>{{order.OrderId}}</td>\n                                        <td>{{order.CustomerId.Email}}</td>\n                                        <td>{{order.OrderDate}}</td>\n                                        <td>{{order.ProductId.ProductId}}</td>\n                                        <td>{{order.TotalAmount}}</td>\n                                        <td><label class=\"{{getPaymentClass(order)}}\">{{getPaymentStatus(order)}}</label></td>\n                                        <td><label class=\"{{getClass(order)}}\">{{getStatus(order)}}</label></td>\n                                        <td><select name=\"chageStatus\" (change)=\"changeOrderStatus($event, order)\">\n                                            <option value=\"0\">NEW</option>\n                                            <option value=\"2\">UNDERPROCESSING</option>\n                                            <option value=\"3\">COMPLETED</option>\n                                        </select></td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}